{## [Core Block] Card Deck
{---------------------------------------------------------------------------------------}
  > http://localhost:8000/sitehub/blocks/carddeck
{-------------------------------------------------------------------------------------##}
{%- set _field = ( settings.field ??? block.settings.field ??? '' ) | replace({'Builder':''}) %}
{%- extends [ "_site/#{_field}.block", "_site/block", "_core/block" ] -%}


{% block block__microlayout %}
    {%- set settings = ( settings ?? null ) is iterable ? settings : block.settings ??? {} -%}
    {%- set settings = {
        variant  : null,
        limit    : 100,
        iterator : 'single'
    } | merge( settings ) -%}


    {## Specific Entries
    {---------------------------------------------------------------------------------##}
    {%- set deck = collect( block.entries ).all() -%}


    {## Content Bits
    {---------------------------------------------------------------------------------##}
    {%- if not deck | length -%}
        {%- set deck = collect( block.bits.with(['images', 'taxonomies']) ).all() -%}
    {%- endif -%}


    {## Collection Results
    {-----------------------------------------------------------------------------------}
        When loading from a Collection, using `CollectionResults()` is easier than
        rewriting the query inline each time you need it -- or trying to implement
        it as an inline Twig macro.

        CollectionResults() is a PHP Twig macro that returns a query object based
        on the search params passed into it. It is editable here:

        -> `craftcms/modules/sitemodule/src/twigextensions/CollectionBaseTwig.php`
    {---------------------------------------------------------------------------------##}
    {%- if not deck | length -%}
        {%- set collections = collect( block.collections ).all() ??? [] -%}
        {%- set deck = CollectionResults( collections, {
            limit : settings.limit,
            slug  : request.getParam('f') ?? null,
            static: 'entries'
        } ) -%}
    {%- endif -%}

    {% set content = {
        zone1 : block('block__zone1'),
        zone2 : block('block__zone2'),
        header: block('block__header'),
        footer: block('block__footer'),
    } %}

    {%- import "_core" as assemble -%}
    {{- assemble.microlayout( settings.microlayout ??? 'default', content, settings ) -}}
{% endblock %}


{## Zone 2 Content / Variant Routing
{-------------------------------------------------------------------------------------##}
{% block block__zone2 %}
    {%- set blockname = "carddeck__#{settings.variant}" -%}
    {{- ( block( blockname ) is defined )
        ? block( blockname )
        : block( 'carddeck__fallback' ) -}}
{% endblock %}



{## Fallback Renderer for Card Deck
{-------------------------------------------------------------------------------------##}
{% block carddeck__fallback -%}
    {%- import "_core" as assemble -%}
    {{- assemble.deck( settings.iterator, deck, settings ) -}}
{%- endblock %}