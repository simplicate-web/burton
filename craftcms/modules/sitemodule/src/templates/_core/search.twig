{## Search Elements   [Core Template]
{---------------------------------------------------------------------------------------}

{-------------------------------------------------------------------------------------##}
{% macro fallback() %}{{ getenv('CRAFT_ENVIRONMENT') == 'dev' ? "There's no such thing as a fallback search part." }}{% endmacro %}


{## Keyword Search Field ##}
{% macro keywordinput( search, settings ) %}
    <div class="border border-theme-tint2 bg-theme-tint flex flex-row rounded-lg p-2">
        {%- set i = settings.loop__index ??? 1 %}
        <input
            name="q{{i}}"
            type="search"
            value="{{search.query}}"
            placeholder="Enter search term..."
            class="flex-grow w-full !p-0 border-none"
            hx-trigger="keyup changed delay:300ms"
        >
        <button class="button">Search</button>
    </div>
{% endmacro %}



{# Topic Filter #}
{% macro topicfilter( search, settings ) %}

    {%- set topics = collect( search.collections ??? [] ) -%}
    {%- set i = settings.loop__index ??? 1 %}

    {%- if topics.count > 1 -%}
        <div class="flex flex-row gap-4 mx-auto">
            {%- set active = topics.firstWhere( 'slug', search.filter ) ?? topics.first() -%}

            {%- for t in topics -%}
                    {%- set radioid  = "radio__#{t.slug|id}" -%}
                    {%- set isactive = active.slug == t.slug -%}
                    <div>
                        <input id="{{radioid}}" type="radio" name="f{{i}}" value="{{t.slug}}" {{ active.slug == t.slug ? 'checked' }}  class="sr-only" />
                        <label for="{{radioid}}" class="
                            py-1.5 px-3
                            text-sm
                            uppercase
                            rounded-full
                            inline-block
                            bg-theme-tint
                            text-theme-bodytext
                            hover:bg-theme-highlight
                            cursor-pointer
                        "><span>{{ t.title }}</span></label>

                    </div>
            {%- endfor -%}
        </div>
    {%- endif -%}
{% endmacro %}



{## Basic Pagination ##}
{% macro pagination( search, settings ) -%}
{%- if search.pageinfo.totalPages > 1 %}
    {% import "_core" as assemble %}
    <nav
        role="navigation"
        aria-label="Pagination Navigation"
        class="mx-auto flex flex-col items-center justify-center max-w-xs @container"
    >

        <ul class="flex justify-between w-full list-none items-end"
            hx-select="#{{ search.uuid }}"
            hx-target="#{{ search.uuid }}"
            hx-swap="outerHTML ignoreTitle:true show:top"
            {% if search.hxvals %}hx-vals='{{ search.hxvals | json_encode }}'{% endif %}
        >
            <li class="list-none">{{ assemble.searchpart( 'previouspage', search, settings ) }}</li>

            <li class="flex flex-col text-center items-center">
                <strong class="text-xs uppercase">Page</strong>
                <div>{{search.page}} / {{search.pageinfo.totalPages}}</div>
            </li>
            <li class="list-none text-right">{{ assemble.searchpart( 'nextpage', search, settings ) }}</li>
        </ul>
    </nav>
{%- endif %}{% endmacro %}



{## Previous Link ##}
{% macro previouspage( search, settings ) %}
    {% set baseurl   = search.baseurl ??? siteUrl( craft.app.request.pathInfo ) %}
    {% set prevpage  = search.page - 1 %}

    {% set urlparams = {} %}
    {% set urlparams = search.filter ? urlparams | merge( { f: search.filter } ) : urlparams %}
    {% set urlparams = search.query  ? urlparams | merge( { q: search.query  } ) : urlparams %}

    {% if prevpage < 1 %}
        {{ tag( 'span', {
            text : "← Prev"|t,
            class: "whitespace-nowrap opacity-50 cursor-not-allowed",
        }) }}
    {% else %}

        {## avoids /p1 in the url ##}
        {% set prevurl = prevpage == 1
            ? siteUrl( baseurl, urlparams )
            : siteUrl( baseurl ~ "/" ~ search.pageinfo.pageTrigger ~ prevpage, urlparams ) %}

        <a
            href="{{ prevurl }}"
            class="whitespace-nowrap"
            hx-get="{{ prevurl }}"
            hx-push-url="{{ prevurl }}"
        >{{"← Prev"|t}}</a>
    {% endif %}
{% endmacro %}



{## Next Link  ##}
{% macro nextpage( search, settings ) %}
    {% set baseurl   = search.baseurl ??? siteUrl( craft.app.request.pathInfo ) %}
    {% set nextpage  = search.page + 1 %}

    {% set urlparams = { } %}
    {% set urlparams = search.filter ? urlparams | merge( { f: search.filter } ) : urlparams %}
    {% set urlparams = search.query  ? urlparams | merge( { q: search.query  } ) : urlparams %}

    {% if nextpage > search.pageinfo.totalPages %}
        {{ tag( 'span', {
            text : "Next →"|t,
            class: "whitespace-nowrap opacity-50 cursor-not-allowed",
        }) }}
    {% else %}
        {% set nexturl = siteUrl( baseurl ~ "/" ~ search.pageinfo.pageTrigger ~ nextpage, urlparams ) %}
        <a
            href="{{ nexturl }}"
            class="whitespace-nowrap"
            hx-get="{{ nexturl }}"
            hx-push-url="{{ nexturl }}"
        >{{"Next →"|t}}</a>
    {% endif %}
{% endmacro %}



{## No Results Message ##}
{% macro noresults( search, settings ) %}
    <div class="max-w-5xl mx-auto @container mb-8">
        <p class="html larger text-center">
            <strong>Sorry</strong>, we could not find any matches for your search.
        </p>
    </div>
{% endmacro %}




{## Load More Pagination ##}
{% macro loadmore( search, settings ) -%}

    {## arguments passed to this template
    {% set isSprig  = isSprig  ??? false %}
    {% set paginate = paginate ??? null %}
    {% set settings = settings ??? null %}
    {% set baseurl  = baseurl  ??? siteUrl( craft.app.request.pathInfo ) ??? null %}
##}

    {## output the actual pagination component
    {% if paginate.totalPages > 1 and paginate.currentPage < paginate.totalPages %}
##}
        {## prepare the url params
        {% set params    = params ??? null %}
        {% set urlParams = {} %}
        {% set urlParams = params.query|default()  ? urlParams|merge({ q: params.query  }) : urlParams %}
        {% set urlParams = params.filter|default() ? urlParams|merge({ f: params.filter }) : urlParams %}
 ##}

        {## prepare the next page link
        {% set nextPage = paginate.currentPage >= paginate.totalPages ? paginate.totalPages : paginate.currentPage + 1 %}
        {% set nextUrl  = siteUrl( baseurl ~ "/p" ~ nextPage, urlParams ) %}
        {% set nextAttr = {
            text : "Load More…"|t,
            href : nextUrl,
            class: "button",
        } | merge( not isSprig ? {} : {
            sprig: true,
            's-push-url': nextUrl,
            's-target': 'closest nav',
            's-swap': 'outerHTML',
            's-val:page': nextPage }
        ) %}

        <nav
            role="navigation"
            aria-label="Pagination Navigation"
            class="{{ setting.class|default('w-full text-center') }}"
            data-theme="{{ setting.theme|default('base') }}"
        >{{ tag( 'a', nextAttr )}}</nav>
    {% endif %}
##}
{% endmacro %}