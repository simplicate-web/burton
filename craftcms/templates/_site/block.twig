{## Block Base   [Site Template]
{-------------------------------------------------------------------------------------##}
{% extends "_core/block" %}

{%- import "_core" as assemble -%}

{## Builder Macros
{-------------------------------------------------------------------------------------##}
{%- macro builder__header( blocks, settings ) -%}
    {% embed "_site/header" with { blocks: blocks, settings: settings } %}
        {% block base block('builder') %}
    {% endembed %}
{%- endmacro -%}


{## Zone 1 Content (All Blocks)
{---------------------------------------------------------------------------------------}
    Zone 1 Content typically comes from a CKEditor/Redactor-style editor component.

    Since most blocks make use of the same "Zone 1 / Primary Copy" field, we can
    define this block in our base block path: ['_site/block','_core/block']

    This block is responsible for rendering the Zone 1 / Text field content and making
    any necessary adjustments to the content based on the block attribute settings.

{## Better Rich HTML / WYSIWYG Code Formatting
{---------------------------------------------------------------------------------------}
    This template makes use of `TextBase()` which is a custom Twig macro, written in
    PHP and editable in the SiteModule folder here:

 -> craftcms/modules/sitemodule/src/twigextensions/TextBaseTwig.php

    TextBase() parses html content, and separates it into a handful of logical parts
    that can be used to more precisely customize layouts without putting too much
    burden on content editors.

    i.e.
      - Eyebrow elements
      - Any (h1,h2,h3) headlines appearing before body text (p, ol, ul, etc)
      - CTA Buttons & Links (along with their kicker text), appearing after body text.
{-------------------------------------------------------------------------------------##}
{% block block__zone1 -%}
{%- set zone1content = block.text ??? block.headline ??? null -%}
{%- if zone1content -%}
    {%- set settings = ( settings ?? null ) is iterable ? settings : block.settings ??? {} -%}
    {%- set settings = {
        blockintro: 'inline',
        blockcta  : 'inline',
        textlayer : 'default',
    } | merge( settings ) -%}

    {%- import "_core" as assemble -%}
    {%- import "_core/text" as utils -%}

    {%- set textbase = TextBase( zone1content ) -%}
    {%- set blockintro = settings.blockintro -%}

    {## build eyebrow ##}
    {%- set eyebrow = textbase.eyebrow | striptags ??? settings.eyebrow ??? null -%}
    {%- if eyebrow ??? settings.eyebrowicon ??? null -%}
        {%- set eyebrowlayer = settings.eyebrowlayer ??? 'basic' -%}
        {%- set eyebrow = assemble.text( "eyebrow__#{eyebrowlayer}", eyebrow, settings | merge({
            eyebrowalign: utils.margin_from_alignment( textbase.headline ~ textbase.intro ~ textbase.body )
        }) ) -%}
    {%- endif -%}

    {% set content %}
        {%- if blockintro == 'inline' -%}
            {{ eyebrow }}
            {{ raw( textbase.headline ) }}
            {{ raw( textbase.intro ) }}
        {%- endif -%}

        {## hypothetically these should be empty .. unless they're set accidentally ##}
        {%- if blockintro == 'lead' -%}{{ raw( textbase.headline ) }}{%- endif -%}
        {%- if blockintro == 'intro' -%}{{ raw( textbase.headlines[1:]|join ) }}{%- endif -%}

        {%- if blockintro == 'headers' -%}{{ raw( textbase.intro ) }}{%- endif -%}

        {%- if blockintro == 'first' -%}
            {{ raw( textbase.headlines[1:]|join ) }}
            {{ raw( textbase.intro ) }}
        {%- endif -%}

        {{- raw( textbase.body ) -}}

        {%- if settings.blockcta == 'inline' -%}
            {{- raw( textbase.action ) -}}
            {{- raw( textbase.kicker ) -}}
        {%- endif -%}
    {% endset %}

    {{- assemble.text( settings.textlayer, content, settings ) -}}

    {# {{ dump( collect( settings ).sortKeys.all ) }} #}

    {% block block__zone1_after "" %}

{%- endif %}{%- endblock %}



{## Block <header> zone content
{---------------------------------------------------------------------------------------}
    This is not a page level <header> tag, but rather the header content for  "headline" content
    for an individual block. This is typically used for the block's title or headline.
{-------------------------------------------------------------------------------------##}
{% block block__header -%}
{%- set zone1content = block.text ??? block.headline ??? null -%}
{%- if zone1content -%}

    {## Pull Block Intro from CKEditor field ##}
    {%- if settings.blockintro is defined and settings.blockintro != 'inline' -%}

        {%- import "_core" as assemble -%}
        {%- import "_core/text" as utils -%}

        {%- set textbase = TextBase( zone1content ) -%}
        {%- set headline = textbase.headlines[0:1]|join ??? null -%}
        {%- set content  = "" -%}

        {## build eyebrow ##}
        {%- set eyebrow = textbase.eyebrow | striptags ??? settings.eyebrow ??? null -%}
        {%- if eyebrow ??? settings.eyebrowicon ??? null -%}
            {%- set eyebrowlayer = settings.eyebrowlayer ??? 'basic' -%}
            {%- set eyebrow = assemble.text( "eyebrow__#{eyebrowlayer}", eyebrow, settings | merge({
                eyebrowalign: utils.margin_from_alignment( textbase.headline ~ textbase.intro ~ textbase.body )
            }) ) -%}
        {%- endif -%}

        {%- switch settings.blockintro -%}
            {%- case "lead" -%}
                {%- set content = textbase.intro -%}
            {%- case "headers" -%}
                {%- set content = textbase.headline -%}
            {%- case "full" -%}
                {%- set content = textbase.headline ~ textbase.intro -%}
            {%- case "first" -%}
                {%- set content = headline -%}
            {%- case "intro" -%}
                {%- set content = headline ~ textbase.intro -%}
            {%- default -%}
        {%- endswitch -%}

        {%- if content | trim -%}
            {{ eyebrow }}
            {{- raw( content ) -}}
            {{- assemble.separator( 'small' ) -}}
        {% endif -%}
    {%- endif -%}
{%- endif %}{% endblock %}



{## Block <footer> zone content
{---------------------------------------------------------------------------------------}
    Note, this isn't the same as a page level <footer> tag, but rather the "headline" content
    for an individual block. This is typically used for the block's title or headline.
{-------------------------------------------------------------------------------------##}
{% block block__footer -%}
{%- set zone1content = block.text ??? block.headline ??? null -%}
{%- if zone1content -%}
    {%- set settings = ( settings ?? null ) is iterable ? settings : block.settings ??? {} -%}
    {%- if settings.blockcta ??? null == 'buttons' -%}
        {%- set textbase = TextBase( zone1content ) -%}
        {%- if textbase.action or textbase.kicker -%}
            {%- import "_core" as assemble -%}
            {{- assemble.separator( 'small' ) -}}
            {{- raw( textbase.action ~ textbase.kicker ) -}}
        {%- endif -%}
    {%- endif -%}
{%- endif %}{% endblock %}
