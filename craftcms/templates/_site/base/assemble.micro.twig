{## Top-Bottom ##}
{% macro topBottom( data ) -%}
    {{ _self.header( data ) }}
    <div class="w-full flex flex-col {{ data.gap }}">
        {## Zone 1 (1024px max-width) ##}
        {{ _self.twoZone( data, {
            zone1: "w-full max-w-5xl @container"
        } ) }}
    </div>
    {{ _self.footer( data ) }}
{%- endmacro %}


{## Top-Bottom / Centered ##}
{% macro topBottom__center( data ) -%}
    {{ _self.header( data, { align: "mx-auto" } ) }}
    <div class="w-full flex flex-col {{ data.gap }}">
        {## Zone 1 (1024px max-width) ##}
        {{ _self.twoZone( data, {
            zone1: "w-full max-w-5xl @container mx-auto"
        } ) }}
    </div>
    {{ _self.footer( data, { align: "mx-auto" } ) }}
{%- endmacro %}


{## Bottom-Top ##}
{% macro bottomTop( data ) -%}
    {{ _self.header( data ) }}
    <div class="w-full flex flex-col-reverse {{ data.gap }}">
        {## Zone 1 (1024px max-width) ##}
        {{ _self.twoZone( data, {
            zone1: "w-full max-w-5xl @container"
        } ) }}
    </div>
    {{ _self.footer( data ) }}
{%- endmacro %}


{## Bottom-Top / Centered ##}
{% macro bottomTop__center( data ) -%}
    {{ _self.header( data, { align: "mx-auto" } ) }}
    <div class="w-full flex flex-col {{ data.gap }}">
        {## Zone 1 (1024px max-width) ##}
        {{ _self.twoZone( data, {
            zone1: "w-full max-w-5xl @container mx-auto"
        } ) }}
    </div>
    {{ _self.footer( data, { align: "mx-auto" } ) }}
{%- endmacro %}


{## Left-Right / Even ##}
{% macro leftRight__even( data ) -%}
    {{ _self.header( data ) }}
    {{ tag( 'div', {
        class: [
            "w-full flex flex-col lg:flex-row",
            data.gap|default()
        ],
        html: _self.twoZone( data, {
            zone1: "w-full lg:w-1/2 @container",
            zone2: "w-full lg:w-1/2 @container",
        } )
    }) }}
    {{ _self.footer( data ) }}
{%- endmacro %}


{## Right-Left / Even ) ##}
{% macro rightLeft__even( data ) -%}
    {{ _self.header( data ) }}
    {{ tag( 'div', {
        class: [
            "w-full flex flex-col lg:flex-row-reverse",
            data.gap|default()
        ],
        html: _self.twoZone( data, {
            zone1: "w-full lg:w-1/2 @container flex",
            zone2: "w-full lg:w-1/2 @container flex",
        } )
    }) }}
    {{ _self.footer( data ) }}
{%- endmacro %}


{## Left-Right / Heavy Zone 1 ##}
{% macro leftRight__heavyZone1( data ) -%}
    {{ _self.header( data ) }}
    {{ tag( 'div', {
        class: [
            "w-full flex flex-col lg:flex-row",
            data.gap|default()
        ],
        html: _self.twoZone( data, {
            zone1: "w-full lg:w-3/5 @container",
            zone2: "w-full lg:w-2/5 @container",
        } )
    }) }}
    {{ _self.footer( data ) }}
{%- endmacro %}


{## Left-Right / Heavy Zone 2 ##}
{% macro leftRight__heavyZone2( data ) -%}
    {{ _self.header( data ) }}
    {{ tag( 'div', {
        class: [
            "w-full flex flex-col lg:flex-row",
            data.gap|default()
        ],
        html: _self.twoZone( data, {
            zone1: "w-full lg:w-2/5 @container",
            zone2: "w-full lg:w-3/5 @container",
        } )
    }) }}
    {{ _self.footer( data ) }}
{%- endmacro %}


{## Right-Left / Heavy Zone 1 ##}
{% macro rightLeft__heavyZone1( data ) -%}
    {{ _self.header( data ) }}
    {{ tag( 'div', {
        class: [
            "w-full flex flex-col-reverse lg:flex-row-reverse",
            data.gap|default()
        ],
        html: _self.twoZone( data, {
            zone1: "w-full lg:w-3/5 @container flex",
            zone2: "w-full lg:w-2/5 @container flex",
        } )
    }) }}
    {{ _self.footer( data ) }}
{%- endmacro %}


{## Right-Left / Heavy Zone 2 ##}
{% macro rightLeft__heavyZone2( data ) -%}
    {{ _self.header( data ) }}
    {{ tag( 'div', {
        class: [
            "w-full flex flex-col-reverse lg:flex-row-reverse",
            data.gap|default()
        ],
        html: _self.twoZone( data, {
            zone1: "w-full lg:w-2/5 @container flex",
            zone2: "w-full lg:w-3/5 @container flex",
        } )
    }) }}
    {{ _self.footer( data ) }}
{%- endmacro %}


{## Overlap ##}
{% macro overlap( data ) -%}
    {{ _self.header( data ) }}

    {{ tag( 'div', {
        class: [
            "w-full overflow-hidden",
        ],
        html: _self.twoZone( data, {
            zone1: "p-10 max-w-3xl @container relative z-20",
            zone2: "absolute inset-0 w-full h-full z-10",
        } )
    }) }}

    {{ _self.footer( data ) }}
{%- endmacro %}



{% macro marginMatchTextAlign( html = "" ) -%}
    {% set attrs = html | retconRemove( '.eyebrow' ) | parseAttr %}
    {% set style = attrs.style['text-align']|default() %}
    {% set class = attrs.class|default() %}
    {% set align = ( 'text-center' in class or style == 'center' ) ? 'mx-auto' %}
    {% set align = ( 'text-left'   in class or style == 'left'   ) ? 'mr-auto' : align %}
    {% set align = ( 'text-right'  in class or style == 'right'  ) ? 'ml-auto' : align %}
    {{ align }}
{%- endmacro %}


{% macro header( data = null, settings = {} ) %}
    {%- if data.header|default() -%}
        {% set settings = {
            class: "w-full @container max-w-4xl",
            align: true
        } | merge(settings) %}

        {## match the mx- on the wrapping <header> with the text-align of it's first child ##}
        {% set oAlign = ( settings.align is same as(true) )
            ? _self.marginMatchTextAlign( data.header ) | trim
            : settings.align %}

        {{ tag( 'header', {
            class: [ settings.class, oAlign ],
            html : data.header
        } ) }}
    {%- endif -%}
{% endmacro %}


{% macro footer( data = null, settings = {} ) %}
    {%- if data.footer|default() -%}
        {% set settings = {
            class: "w-full @container max-w-4xl",
            align: true
        } | merge(settings) %}

        {## match the mx- on the wrapping <footer> with the text-align of it's first child ##}
        {% set oAlign = ( settings.align is same as(true) )
            ? _self.marginMatchTextAlign( data.header ) | trim
            : settings.align %}

        {{ tag( 'footer', {
            class: [ settings.class, oAlign ],
            html : data.footer
        } ) }}
    {%- endif -%}
{% endmacro %}


{% macro twoZone( data = null, settings = {} ) %}
    {% set settings = {
        zone1: "w-full @container",
        zone2: "w-full @container",
        align: true
    } | merge(settings) %}

    {%- if data.zone1|default() -%}
        {## match the mx- on the wrapping <zone> with the text-align of it's first child ##}
        {% set oAlign = ( settings.align is same as(true) )
            ? _self.marginMatchTextAlign( data.zone1 ) | trim
            : settings.align %}

        {{ _self.zone( 1, data.zone1, [settings.zone1, oAlign] ) }}
    {%- endif -%}

    {%- if data.zone2|default() -%}
        {{ _self.zone( 2, data.zone2, [settings.zone2] ) }}
    {%- endif -%}
{% endmacro %}


{% macro zone( zone = 1, content = ' ', class = [] ) -%}
    {{ tag( 'div', {
        class: class,
        html : content,
        data : { zone: zone }
    } ) }}
{%- endmacro %}