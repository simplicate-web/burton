{## Entry Template for Event Logistics Section
{---------------------------------------------------------------------------------------}
    Admin → http://localhost:8000/cms/settings/sections/10
{-------------------------------------------------------------------------------------##}
{% set template = null %}
{% set handle   = entry.type.handle ?? null %}


{## [Type] Brand → http://localhost:8000/cms/settings/entry-types/28
{-------------------------------------------------------------------------------------##}
{% if 'brand' == handle %}
    {% set template = "_site/template.fullpage" %}

{% endif %}


{## [Type] City → http://localhost:8000/cms/settings/entry-types/29
{-------------------------------------------------------------------------------------##}
{% if 'city' == handle %}
    {% set template = "_site/template.fullpage" %}
{% endif %}


{## [Type] Venue → http://localhost:8000/cms/settings/entry-types/30
{-------------------------------------------------------------------------------------##}
{% if 'venue' == handle %}
    {% set template = "_site/template.fullpage" %}
{% endif %}


{## [Type] Session → http://localhost:8000/cms/settings/entry-types/35
{-------------------------------------------------------------------------------------##}
{% if 'session' == handle %}
    {% set template = "_site/template.fullpage" %}
{% endif %}


{## Render Template
{---------------------------------------------------------------------------------------}
    We use `extends` (vs `include`) to allow overriding template {% blocks %} in *this*
    template, rather than forcing separate files for each type, even for minimal changes.
  ➜ https://twig.symfony.com/doc/3.x/tags/extends.html
{-------------------------------------------------------------------------------------##}
{% extends template ? template : template_from_string('{% block catch "" %}') %}


{## [Error] 404 Not Found → craftcms/templates/_site/error.twig
{-------------------------------------------------------------------------------------##}
{% block catch %}

    {{ dump( brandSlug ?? null ) }}
    {{ dump( citySlug  ?? null ) }}

    {# {% header "HTTP/1.0 404 Not Found" %} #}
{% endblock %}

{% block head__styles %}
    {% embed ['_site/html.styles'] with {
        brand: entry.type.handle ??? null == 'brand' ? entry : null
    } %}{% endembed %}
{% endblock %}





{#######################################################################################}
{##                                   Custom Macros                                   ##}
{#######################################################################################}


{## [Macro] Entry URI Formatter
{---------------------------------------------------------------------------------------}
    Better than a long-ass Twig-oneliner stuffed into the `URI Format` CP field:
  → {% from '_site/logistics._entry' import uri %}{{ uri( object ) }}

 ## URI Format
  └ leadership-series
  └ leadership-women
  └ events/cities/toronto
  └ events/venues/john-bassett-theatre
  └ insights/showcase/session-name

 ## IMPORTANT ― Resave existing records (via console) anytime this macro changes:
  → make craft "resave/entries --section=logistics"
{-------------------------------------------------------------------------------------##}
{% macro uri( object ) %}{% apply spaceless %}
    {% set parts  = [] %}
    {% set handle = object.type.handle %}

    {% if 'brand' == handle %}
        {% set parts = [ object.slug ] %}
    {% endif %}

    {% if 'city' == handle %}
        {% set parts = [ 'events/cities', object.slug ] %}
    {% endif %}

    {% if 'venue' == handle %}
        {% set parts = [ 'events/venues', object.slug ] %}
    {% endif %}

    {% if 'session' == handle %}
        {% set parts = [ 'insights/showcase', object.slug ] %}
    {% endif %}

    {{ parts | filter | join('/') }}
{% endapply %}{% endmacro %}



{#######################################################################################}
{##                                Template Overrides                                 ##}
{#######################################################################################}