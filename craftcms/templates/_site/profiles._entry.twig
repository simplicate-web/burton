{## Entry Template for Profiles Section
{---------------------------------------------------------------------------------------}
    Admin → http://localhost:8000/cms/settings/sections/11
{-------------------------------------------------------------------------------------##}
{% set template = null %}
{% set handle   = entry.type.handle ?? null %}


{## [Type] Organization → http://localhost:8000/cms/settings/entry-types/34
{-------------------------------------------------------------------------------------##}
{% if 'organization' == handle %}
    {# {% set template = "_site/template.fullpage" %} #}
{% endif %}


{## [Type] Person → http://localhost:8000/cms/settings/entry-types/32
{-------------------------------------------------------------------------------------##}
{% if 'person' == handle %}
    {% set template = "_site/template.fullpage" %}
{% endif %}


{## Render Template
{---------------------------------------------------------------------------------------}
    We use `extends` (vs `include`) to allow overriding template {% blocks %} in *this*
    template, rather than forcing separate files for each type, even for minimal changes.
  ➜ https://twig.symfony.com/doc/3.x/tags/extends.html
{-------------------------------------------------------------------------------------##}
{% extends template ? template : template_from_string('{% block catch "" %}') %}


{## [Error] 404 Not Found → craftcms/templates/_site/error.twig
{-------------------------------------------------------------------------------------##}
{% block catch %}{% header "HTTP/1.0 404 Not Found" %}{% endblock %}



{#######################################################################################}
{##                                   Custom Macros                                   ##}
{#######################################################################################}


{## [Macro] Profile URI Builder
{---------------------------------------------------------------------------------------}
    Better than a long-ass Twig-oneliner stuffed into the `URI Format` CP field:
  → {% from '_site/profiles._entry' import uri %}{{ uri( object ) }}

 ## URI Format
  └ insights/leaders/person-name
  └ contributors/person-name
  └ partners/organization-name

 ## IMPORTANT ― Resave existing records (via console) anytime this macro changes:
  → make craft "resave/entries --section=profiles"
{-------------------------------------------------------------------------------------##}
{% macro uri( object ) %}{% apply spaceless %}
    {% set parts   = [] %}
    {% set handle  = object.type.handle %}
    {% set variant = object.variant.value | default('') %}

    {% if 'organization' == handle %}
        {% set parts = [ 'about/partners', object.slug ] %}
    {% endif %}

    {% if 'person' == handle %}
        {% set parts = ( variant == 'person_leader' )
            ? [ 'insights/leaders', object.slug ]
            : [ 'about/contributors', object.slug ] %}
    {% endif %}

    {{ parts | filter | join('/') }}
{% endapply %}{% endmacro %}



{#######################################################################################}
{##                                Template Overrides                                 ##}
{#######################################################################################}
