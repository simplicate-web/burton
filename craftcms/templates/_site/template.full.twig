{% extends "_site/html" %}

{## Single Column Base Layout
{---------------------------------------------------------------------------------------}
    - AJAX / htmx requests
        - Served "chromeless" content only for in-page modals via {% block page__ajax %}.
        - No <header> or <footer> elements included by default.
        - See: `templates/_core/pages/page.ajax.twig`

    - Header (Base)
        - Logo & Branding
        - Primary Navigation
        - Breadcrumb Navigation
        - Renders the `entry.headerBuilder` matrix builder (if present)
        - Use {% set entry = { title: "Title", "subtitle": "..." } %} to auto-populate
          the base header if using as a base template for static routes.

    - Content (Single Column)
        - Overload {% block content "" %} if using as a base template for static routes.
        - Automatically adds a spacer before and after the content block.
        - Overload {% block main__content %} to avoid auto-spacers
        - Otherwise, renders `entry.bodyBuilder` matrix builder (if present)

    - Fat Footer (Base)
        - Call to Action
        - Contact & Social Links
        - Userflow / Quicklinks
        - Legal Navigation
--------------------------------------------------------------------------------------##}
{% import "_assemble" as assemble %}

{% set blocks = entry.bodyBuilder
    .with([
        "text:bits",
        "image:collections",     "image:images",
        "media:collections",     "media:media",
        "carddeck:collections",  "carddeck:entries", "carddeck:items",
        "component:collections", "component:form",
        "fragment:fragments"
    ])
    .all()
%}

{% block page %}
    {% block page__top      block( 'header__base', '_site/header' ) %}
    {% block page__main     block( 'main__base' ) %}
    {% block page__bottom   block( 'footer__base', '_site/footer' ) %}

    {% from "_core/modal" import dynamic %}
    {{ dynamic() }}
{% endblock %}


{% block main__base %}
    {% block main__open    raw( "<main " ~ attr({ id: "content", class: "relative z-10 min-h-[50vh]" }) ~ ">" ) %}
    {% block main__content block('content') %}
    {% block main__close   "</main>" %}
{% endblock %}


{% block content %}

    {## Check for matching themes
    {-----------------------------------------------------------------------------------}
        If the theme of the first block in the header builder, matches the theme of the
        first block in the body builder, skip the first spacer
    ----------------------------------------------------------------------------------##}
    {% set firstblock = blocks | first %}
    {% set headerattr = block( 'page__top' ) | retconOnly( 'header *[data-theme]' ) | parseAttr %}
    {% set themematch = headerattr.data.theme ??? "base" == firstblock.theme.value ??? "base" %}

    {{ assemble.builder( 'mainfull', blocks, {
        container  : "fluid",
        spacerfirst: themematch ? "none" : "default",
        spacerabove: "default",
        spacerbelow: "default"
    }) }}
{% endblock %}


{# served when page requested via ajax #}
{% block page__ajax %}

    {{ block( 'header__content', '_site/header' ) }}

    {{ assemble.builder( 'ajax', blocks, {
        container  : "fluid",
        spacerabove: "small",
        spacerbelow: "small"
    }) }}

{% endblock %}