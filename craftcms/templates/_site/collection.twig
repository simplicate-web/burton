{% macro carousel( items, settings = null ) -%}
{%- if items -%}
    {%- set settings = settings is not null and settings is iterable ? settings : {} -%}
    {%- set settings = {
        cardlayer: 'summary',
        card__imagelayer: 'default'
    } | merge( settings ) -%}

    {## pre-assemble each item into card html ##}
    {%- import "_assemble" as assemble -%}
    {%- set items = items | map( item => assemble.card( item, settings.cardlayer, settings ) ) -%}

    {% embed ['_site/carousel','_core/carousel'] with {
        items: items
    } %}{% endembed %}
{%- endif -%}{%- endmacro %}



{% macro accordion( items, settings = null ) -%}
{%- if items -%}
    {%- set settings = settings is not null and settings is iterable ? settings : {} -%}
    {%- set settings = {
        cardlayer: 'panel',
        card__imagelayer: 'default'
    } | merge( settings ) -%}

    {% embed ['_site/accordion','_core/accordion'] with {
        items    : items,
        settings : settings,
        cardlayer: settings.cardlayer,
        firstopen: settings.firstopen ?? false
    } %}
        {% block panel__title CardBase( item, settings )['label'] %}

        {% block panel__content %}
            {%- import "_assemble" as assemble -%}
            {{ assemble.card( item, cardlayer, settings ) }}
        {% endblock %}
    {% endembed %}
{%- endif -%}{%- endmacro %}



{% macro grid2( items, settings = null ) %}
    {% import "_assemble" as assemble %}

    {% set flexible  = 'grid items-start grid-cols-1 @md:grid-cols-2 gap-4 @xl:gap-8 @4xl:gap-12 @7xl:gap-16' %}
    {% set fixed     = 'grid items-start grid-cols-2 gap-8 @3xl:gap-16 @7xl:gap-24' %}
    {% set cardlayer = settings.cardlayer ??? 'default' %}

    {% if items %}
        {% set html %}
            {% for item in items %}
                {{ assemble.card( item, cardlayer, settings, loop ) }}
            {% endfor %}
        {% endset %}

        {% set grid = {
            html : html,
            data : { layout: 'grid2flexible' },
            class: flexible
        } %}

        <div class="w-full">{{ tag( 'div', grid ) }}</div>
    {% endif %}
{% endmacro %}




{% macro grid3( items, settings = null ) %}
    {% import "_assemble" as assemble %}

    {% set flexible  = 'grid items-start grid-cols-1 @md:grid-cols-2 @lg:grid-cols-3 gap-8 @5xl:gap-12 @7xl:gap-16' %}
    {% set fixed     = 'grid items-start grid-cols-3 gap-4 @3xl:gap-12 @5xl:gap-16 @7xl:gap-20' %}
    {% set cardlayer = settings.cardlayer ??? 'default' %}

    {% if items %}
        {% set html %}
            {% for item in items %}
                {{ assemble.card( item, cardlayer, settings, loop ) }}
            {% endfor %}
        {% endset %}

        {% set grid = {
            html : html,
            data : { layout: 'grid3fixed' },
            class: fixed
        } %}

        <div class="w-full">{{ tag( 'div', grid ) }}</div>
    {% endif %}
{% endmacro %}




{% macro tabs( items, settings = null ) -%}
{%- if items -%}
    {%- set settings = settings is not null and settings is iterable ? settings : {} -%}
    {% set settings = {
        cardlayer: 'panel',
        card__imagelayer: 'default'
    } | merge( settings ) %}

    {% embed ['_site/tabs','_core/tabs'] with {
        items    : items,
        cardlayer: settings.cardlayer,
        settings : settings,
    } %}
        {% block tab__title CardBase( item, settings )['label'] %}

        {% block tab__content %}
            {%- import "_assemble" as assemble -%}
            {{ assemble.card( item, cardlayer, settings ) }}
        {% endblock %}
    {% endembed %}
{%- endif -%}{%- endmacro %}



{% macro masonry( items, settings = null ) -%}
{%- if items -%}
    {%- set settings = settings is not null and settings is iterable ? settings : {} -%}
    {% set settings = settings | merge( {
        cardlayer: 'masonry',
        card__imagelayer: 'stretch'
    } ) %}

    {% css %}
        .masonry {
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
            counter-reset: brick;
            margin-right: -2rem;
            min-width: 100%;
        }

        .masonry-brick {
            flex: auto;
            height: 300px;
            min-width: 300px;
            margin: 0 2rem 2rem 0;
            overflow: hidden;
        }

        .masonry-brick:nth-child(4n+1) {
            width: 400px;
        }

        .masonry-brick:nth-child(4n+2) {
            width: 500px;
        }

        .masonry-brick:nth-child(4n+3) {
            width: 200px;
        }
    {% endcss %}

    {% import "_assemble" as assemble %}

    {% set html %}
        {% for item in items %}
            <div class="masonry-brick">{{ assemble.card( item, settings.cardlayer, settings, loop ) }}</div>
        {% endfor %}
    {% endset %}

    {% set grid = {
        html : html,
        data : { layout: 'masonry' },
        class: 'masonry'
    } %}

    <div class="w-full overflow-hidden">{{ tag( 'div', grid ) }}</div>
{%- endif %}{% endmacro %}



{## Auto-Grid Layout
 ---------------------------------------------------------------------------- ##

 ---------------------------------------------------------------------------- ##}
{% macro autogrid( items, settings = null ) -%}
{%- if items -%}
    {% set total     = items|length %}
    {% set gridbase  = "w-full grid grid-cols-1 gap-4 lg:gap-8 xl:gap-16 " %}

    {% set class = gridbase %}
    {% if total == 1 %}
        {% set class = class ~ "" %}
    {% elseif total == 2 %}
        {% set class = class ~ "@sm:grid-cols-2" %}
    {% elseif total == 3 %}
        {% set class = class ~ "@3xl:grid-cols-3" %}
    {% elseif total == 4 %}
        {% set class = class ~ "@sm:grid-cols-2 @4xl:grid-cols-4" %}
    {% elseif total == 5 %}
        {% set class = class ~ "@sm:grid-cols-2 @3xl:grid-cols-3" %}
    {% elseif total == 6 %}
        {% set class = class ~ "@sm:grid-cols-2 @3xl:grid-cols-3" %}
    {% elseif total == 7 %}
        {% set class = class ~ "@sm:grid-cols-2 @4xl:grid-cols-4" %}
    {% elseif total == 8 %}
        {% set class = class ~ "@sm:grid-cols-2 @4xl:grid-cols-4" %}
    {% elseif total == 9 %}
        {% set class = class ~ "@sm:grid-cols-2 @3xl:grid-cols-3 @6xl:grid-cols-5" %}
    {% elseif total == 10 %}
        {% set class = class ~ "@sm:grid-cols-2 @4xl:grid-cols-4 @6xl:grid-cols-5" %}
    {% elseif total == 11 %}
        {% set class = class ~ "@sm:grid-cols-2 @3xl:grid-cols-3 @4xl:grid-cols-4 @6xl:grid-cols-6" %}
    {% elseif total >= 12 %}
        {% set class = class ~ "@sm:grid-cols-2 @3xl:grid-cols-3 @4xl:grid-cols-4 @6xl:grid-cols-6" %}
    {% endif %}

    {% import "_assemble" as assemble %}
    <div class="w-full">
        <div class="{{class}}">
            {% set cardlayer = settings.cardlayer ??? 'default' %}
            {% for item in items %}
                {{ assemble.card( item, cardlayer, settings, loop ) }}
            {% endfor %}
        </div>
    </div>
{%- endif %}{% endmacro %}




{% macro gallery( items, settings = null ) %}
    {% import "_assemble" as assemble %}
    {%- if items -%}
        <div class="w-full">
            <div class="w-full grid grid-cols-3 gap-4 lg:gap-6 xl:gap-9 items-start">
                {% set cardlayer = settings.cardlayer ??? 'default' %}
                {% for item in items %}
                    {{ assemble.card( item, cardlayer, settings, loop ) }}
                {% endfor %}
            </div>
        </div>
    {% endif %}
{% endmacro %}