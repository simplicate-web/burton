{## Sprig Collection Search Component
{-------------------------------------------------------------------------------------##}
{% extends template_from_string('{% block content %}{% endblock %}') %}


{## Block Level Settings + Defaults
{-------------------------------------------------------------------------------------##}
{%- set settings = settings is not null and settings is iterable ? settings : {} -%}
{% set settings = {
    microlayout    : 'zone1Top',
    collectionlayer: 'masonry',
    requireInput   : false,
} | merge( settings ) %}


{## Collect Search Parameters & Pagination Results
{---------------------------------------------------------------------------------------}
    CollectionBase is a PHP Twig macro that returns a query object based on the
    search params passed into it. It is editable here:

    -> `craftcms/modules/sitemodule/src/twigextensions/CollectionBaseTwig.php`

    It is a necessary evil for it to exist outside of Twig in order to provide a
    consistent and predictable interface to looking up collections from different
    content sources and conforming their results so that any colllection iterator
    can generate output from them.

    If Twig had a more robust way to return a variable from an inline {% macro %}
    exectution (without rendering it), `CollectionBase` could easily exist as Twig.
{-------------------------------------------------------------------------------------##}
{% set search = {
    page  : craft.app.request.getParam('page') ??? craft.app.request.pageNum ??? 1,
    query : craft.app.request.getParam('q') ??? null,
    filter: craft.app.request.getParam('f') ??? null,
    limit : limit ??? settings.limit ??? settings.perpage ??? 12 ,
    return: 'query'
} %}

{% set searchOK = true %}
{% set searchOK = settings.requireInput and not search.query ? false : searchOK %}

{% set queryobj = searchOK ? CollectionBase( collections ??? [], search ) : null %}
{% set pageinfo = null %}
{% set results  = [] %}

{% if queryobj %}
    {% set pageinfo = sprig.paginate( queryobj, search.page ) %}
    {% set results  = pageinfo.pageResults %}
{% endif %}



{## Create Params Object for Search Macros
{---------------------------------------------------------------------------------------}
    This will become the primary object that gets passed to all search related macros.
    Basically a combination of the original search parameters + pagination info.
{-------------------------------------------------------------------------------------##}
{% set uuid = md5( settings | json_encode ) %}
{% set params = search | merge({
    uuid    : "sprig-#{uuid}",
    last    : pageinfo.last  ??? 0,
    first   : pageinfo.first ??? 0,
    total   : pageinfo.total ??? 0,
    pages   : pageinfo.totalPages ??? 0,
    sprig   : true,
    trigger : pageinfo.pageTrigger ??? 'p',
    baseurl : settings.entryurl ??? siteUrl( craft.app.request.pathInfo ),
}) %}


{## Main Template Output
{---------------------------------------------------------------------------------------}
    `header` / `footer` / `zone1` content variables can be passed into the template.
{-------------------------------------------------------------------------------------##}
{% block content %}
    {% import "_assemble" as assemble %}
    {{ assemble.microlayout( settings.microlayout, {
        zone1 : block('content__zone1'),
        zone2 : block('content__zone2'),
        header: header ??? '',
        footer: footer ??? '',
    }, settings ) }}
{% endblock %}


{% block content__zone1 %}
    <div class="sticky top-20">
        {{ zone1 ? raw( zone1 ) : '' }}
        {% import "_assemble" as assemble %}
        {{ assemble.searchpart( params, 'search__form', settings ) }}
    </div>
{% endblock %}


{% block content__zone2 %}
    {% import "_assemble" as assemble %}
    <div id="{{params.uuid}}" class="w-full">
        {% if results %}
            {{ assemble.collection( results, settings.collectionlayer, settings ) }}

            {% if params.pages > 1 %}
                <div class="pt-10">{{ assemble.searchpart( params, 'search__pagination', settings ) }}</div>
            {% endif %}
        {% endif %}
    </div>
{% endblock %}