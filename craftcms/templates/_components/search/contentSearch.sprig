{% set settings = {
    searchID     : null,
    itemGrid     : '_layouts/micro/gridCols3',
    itemCard     : '_cards/item/basic',
    entryUrl     : '/',
    itemComponent: null,
    limit        : 12,
    filter       : null,
    query        : null,
    pagination   : null,
    uuid         : create('craft\\helpers\\StringHelper').UUID()
}|map( (item,key) => _context[key] ??? settings[key] ??? item ) %}

{% macro urlWithQueryParams( entryUrl, page, params ) -%}
    {%- set baseUrl  = ( page > 1 ) ? "#{entryUrl}/p#{page}" : "#{entryUrl}/" -%}
    {{ siteUrl( baseUrl, params ) }}
{%- endmacro %}

{## searchID references a Saved Search Taxonomy entry containing default search parameters ##}
{% set searches = craft.entries.section('taxonomy').id(settings.searchID) ??? null %}

{% if searches.count() %}

    {## collect query parameters ##}
    {% set searchParams = {
        page  : craft.app.request.getParam('page') ??? craft.app.request.pageNum ??? 1,
        filter: craft.app.request.getParam('f')    ??? settings.filter ??? searches.one().slug,
        query : craft.app.request.getParam('q')    ??? settings.query  ??? null,
    } %}

    {% set search = searches.collect().firstWhere( 'slug', searchParams.filter ) ??? searches|first %}

    {% set contentType = search.contentType.reference() ??? null %}
    {% set section     = contentType.section       ??? null %}
    {% set entryType   = contentType.entryType     ??? null %}

    {% set sort        = search.sort.value         ??? null %}
    {% set redirect    = search.redirect           ??? null %}
    {% set topics      = search.taxonomies.all()   ??? null %}

    {## search/sort/filter settings ##}
    {% set orderBy = 'postDate DESC' %}
    {% set orderBy = ( sort == 'random'       ) ? 'RAND()'        : orderBy %}
    {% set orderBy = ( sort == 'alphabetical' ) ? 'title DESC'    : orderBy %}
    {% set orderBy = ( sort == 'upcoming'     ) ? 'startDate ASC' : orderBy %}

    {## create the starting query ##}
    {% set collectionQuery = null %}

    {% if section == 'products' %}
        {% set collectionQuery = craft.products().availableForPurchase(true) %}
        {% set orderBy = ( sort == 'recent' ) ? 'dateUpdated DESC' : orderBy %}
    {% else %}
        {% set collectionQuery = craft.entries() %}
        {% set collectionQuery = section ? collectionQuery.section(section) : collectionQuery %}
    {% endif %}

    {% if searchParams.query %}
        {% set collectionQuery = collectionQuery.search(searchParams.query) %}
        {% set orderBy = 'score' %}
    {% endif %}

    {% set collectionQuery = collectionQuery.orderBy(orderBy).limit(settings.limit) %}

    {% set collectionQuery = entryType ? collectionQuery.type(entryType)   : collectionQuery %}
    {% set collectionQuery = topics    ? collectionQuery.relatedTo(topics) : collectionQuery %}

    {% set collectionItems = collectionQuery.all() ??? null %}

    {% if settings.itemComponent %}

        {## we're handing off the items to a custom component ##}
        {{ include( settings.itemComponent, {
            items   : collectionItems,
            settings: settings
        }, withContext = false ) }}

    {% else %}

        {## treat it like a search result index page ##}
        {% set pageInfo = sprig.paginate( collectionQuery, searchParams.page ) %}

        {## make sure the url stays updated when moving between pages ##}
        {% set pushUrl  = ( searchParams.page > 1 ) ? "#{settings.entryUrl}/p#{searchParams.page}" : settings.entryUrl %}
        {% set queryStr = { q: searchParams.query, f: searchParams.filter }|url_encode %}
        {% do sprig.pushUrl( queryStr ? "#{pushUrl}?#{queryStr}" : pushUrl ) %}

        {## output the search results ##}
        <div s-results="sprig-{{settings.uuid}}" class="grid grid-cols-1 gap-8">

            {% if settings.pagination == 'standardWithSearch' %}
                <form method="get" action="{{ settings.entryUrl }}" class="max-w-3xl w-full mx-auto">

                    <div class="flex flex-col justify-between sm:flex-row border border-slate-700">
                        <input
                            id="query-{{settings.uuid}}"
                            name="q"
                            type="search"
                            value="{{searchParams.query}}"
                            placeholder="Enter search term..."
                            class="
                                flex-grow
                                px-4
                                py-4
                                sm:py-1
                                max-w-[calc(100%_-_7rem)]
                                text-black
                            "
                            sprig
                            s-val:page="1"
                            s-trigger="keyup changed delay:300ms"
                        >
                        <button class="button" sprig>Search</button>
                        {{ hiddenInput('filter', searchParams.filter ) }}
                    </div>
                </form>
            {% endif %}

            {% if searches.count() > 1 %}
                <div class="flex justify-center">
                    <ul class="list-none m-0 p-0 flex justify-center gap-4">
                        {% for group in searches %}
                            <li>
                                <a
                                    sprig
                                    s-val:filter="{{group.slug}}"
                                    class="cTag cTag__{{ searchParams.filter != group.slug ? 'inactive' : 'active' }}"
                                    href="{{ _self.urlWithQueryParams(
                                        settings.entryUrl,
                                        searchParams.page,
                                        { q: searchParams.query, f: group.slug }
                                    ) }}"
                                >{{ group.label ??? group.title }}</a>
                            </li>
                        {% endfor %}
                    </ul>
                </div>
            {% endif %}

            {% if pageInfo.pageResults %}
                {% embed settings.itemGrid %}
                    {% block items %}
                        {% for item in pageInfo.pageResults %}
                            {{ include( settings.itemCard, {
                                entry   : item,
                                loop    : loop,
                                settings: settings
                            }, withContext = false ) }}
                        {% endfor %}
                    {% endblock %}
                {% endembed %}
            {% else %}
                <p class="text-center">Sorry, we could not match any results to your search.</p>
            {% endif %}

            {% if settings.pagination in ['standard','standardWithSearch'] %}
                {{ include( '_components/pagination/sprig', {
                    settings    : settings,
                    pageInfo    : pageInfo,
                    searchParams: searchParams
                }, withContext = false ) }}
            {% endif %}

            {% if settings.pagination == 'all' and redirect %}
                {{ redirect.getLink({
                    class: 'button',
                    text: 'See All',
                }) }}
            {% endif %}
        </div>
    {% endif %}
{% endif %}
