
{% set items    = items    ??? [] %}
{% set settings = settings is defined and settings is iterable ??? null %}
{% set itemCard = itemCard ??? settings.itemCard ??? '_components/cards/item/stackedBox' %}
{% set uuid     = create('craft\\helpers\\StringHelper').UUID() %}

{% if items %}
    <div
        x-data="{ splide: null }"
        x-cloak
        x-init="$nextTick(() => {
            splide = new Splide($refs['splide-{{uuid}}'], {
                type: 'loop',
                perPage: 1
            }).mount()
        })">

        <section x-ref="splide-{{uuid}}" class="splide relative z-40" id="splide-{{uuid}}">
            <div class="splide__track">
                <ul class="splide__list">
                    {% for item in items %}
                        <li class="splide__slide flex flex-col items-center justify-start">
                            {{ include(itemCard, {
                                entry: item,
                                loop: loop,
                                settings: settings
                            }, withContext = false ) }}
                        </li>
                    {% endfor %}
                </ul>
            </div>
        </section>
    </div>
{% endif %}

{% html %}
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@splidejs/splide@4.0.7/dist/css/splide.min.css">
    <script src="https://cdn.jsdelivr.net/npm/@splidejs/splide@4.0.7/dist/js/splide.min.js"></script>

    <style>
        #splide-{{uuid}} .splide__pagination {
            display: none;
        }
    </style>
{% endhtml %}
