{## Collection Block Base
 ------------------------------------------------------------------------------------ ##
    -> http://localhost:8000/sitehub/blocks/collection
 ------------------------------------------------------------------------------------ ##}
{% extends [ "_site/content/blocks/base", "_core/blocks/base" ] %}


{## Render the block using a two-zone micro-layout
 ------------------------------------------------------------------------------------ ##
    -> http://localhost:8000/sitehub/layout/micro
    -> http://buildwithburton.com/docs/micro-layouts
 ------------------------------------------------------------------------------------ ##}
{% block content %}

    {% import "_site/layout/assemble" as layout %}

    {{ layout.micro(
        block.settings.microLayout|default('topBottom'),
        {
            zone1     : block('block__text'),
            zone2     : block('block__collection'),
            header    : block('block__header'),
            footer    : block('block__footer'),
            container : block.settings.container|default()
        }
    ) }}

{% endblock %}



{## Prepare the Collection Content
 ------------------------------------------------------------------------------------ ##
    These blocks can be overridden in a child template
 ------------------------------------------------------------------------------------ ##}
{% block block__collection %}

    {% set source    = block.source|default('items') %}
    {% set interface = block.interface.value ??? block.interface ??? null %}

    {## Rendering in Sprig?
     -------------------------------------------------------------------------------- ##
        If a collection is rendering with a Sprig component, hand-off before collecting
        the items. Sprig templates only accept simple objects as arguments, so item
        collection will happen inside the sprig template.
     -------------------------------------------------------------------------------- ##}
    {% if ( source == 'feed' ) and ( interface in [ 'pagination', 'fullSearch', 'filterByFeed', 'loadMore' ] ) %}

        {% block block__collection__sprig %}
            {{ sprig( "_site/loops/loop.paginate.sprig", {
                settings : block.settings,
                limit    : block.limit ??? null,
                interface: block.interface.value ??? block.interface ??? null,
                feedIds  : block.feeds.ids() ?? block.feeds ??? null,
            }) }}
        {% endblock %}


    {## Render in a "loop" template
     -------------------------------------------------------------------------------- ##}
    {% else %}

        {## Collect the items into a list depending on the source type
         ---------------------------------------------------------------------------- ##}
        {% set collection = [] %}
        {% set collection = source == 'assets'  ? block.assets.all()  ??? block.assets  ??? null : collection %}
        {% set collection = source == 'entries' ? block.entries.all() ??? block.entries ??? null : collection %}


        {## For inline items, we need to consider Content Bit overrides
         ---------------------------------------------------------------------------- ##}
        {% if source == 'items' %}
            {% set inlineItems = [] %}
            {% for item in block.items.all() ??? null %}
                {% set inlineItems = inlineItems|merge([ item.bit.one() ??? item ]) %}
            {% endfor %}
            {% set collection = inlineItems ??? block.items ??? collection %}
        {% endif %}


        {% set params = {
            page  : craft.app.request.getParam('page') ??? craft.app.request.pageNum ??? 1,
            filter: craft.app.request.getParam('f')    ??? block.filter ??? block.feeds.one().slug,
            query : craft.app.request.getParam('q')    ??? block.query  ??? null,
            limit : block.limit ??? 6
        } %}

        {## getContentFeedResults() is a custom macro that is a shortcut for
            collecting the items described within a Content Feed entry.
             -> craftcms/modules/gearbox/src/twigextensions/GearboxTwigExtension.php
         ---------------------------------------------------------------------------- ##}
        {% set collection = source == 'feed' ? getContentFeedResults( block.feeds.ids(), params ) : collection %}

        {% block block__collection__loop %}
            {{ include( [
                block.settings.cardLoop ??? null,
                "_site/loops/loop.auto",
                "_core/blocks/loop.auto"
            ] | filter, {
                items    : collection|default(),
                limit    : block.limit ??? null,
                feedIds  : block.feeds.ids() ?? block.feeds ??? null,
                settings : block.settings|default(),
                interface: block.interface.value ??? block.interface ??? null,
            }, withContext = false ) }}
        {% endblock %}

    {% endif %}
{% endblock %}