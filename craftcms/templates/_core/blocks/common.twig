{## Block Open & Close Tags
 ------------------------------------------------------------------------------------ ##
    Tag type and attributes for the inner block element. Typically something like:
    <section data-block="blockType">
 ------------------------------------------------------------------------------------ ##}
{% block block__open -%}
    <{{block.settings.blockTag|default('section')}} {{attr({
        class: block.settings.sectionClass|default('w-full relative z-20'),
        data : {
            viewport: true,
            block   : block.settings.blockType ??? null,
            uuid    : block.settings.uuid      ??? null,
        }
    })}}>
{%- endblock %}

{% block block__close %}</{{block.settings.blockTag|default('section')}}>{% endblock %}




{## Theme Open & Close Tags
 ------------------------------------------------------------------------------------ ##
    Tag type and attributes for the outer theme tag. Typically something like:
    <div data-theme="name">
 ------------------------------------------------------------------------------------ ##}
{% block theme__close %}</{{block.settings.themeTag|default('div')}}>{% endblock %}
{% block theme__open %}<{{block.settings.themeTag|default('div')}} {{ attr({
    class: block.settings.themeClass|default( 'relative' ),
    data : {
        viewport: true,
        theme   : block.settings.theme      ??? null,
        block   : block.settings.blockType  ??? null,
        uuid    : block.settings.uuid       ??? null,
        next    : { theme: block.next.theme ??? null },
        prev    : { theme: block.prev.theme ??? null },
    }
}) }}>{% endblock %}


{% block headerHeadline -%}
    {% set headline = block.headline ??? null %}
    {% if headline %}
        <h1>{{ headline }}</h1>
    {% endif %}
{%- endblock %}


{## Base Text (Zone 1) Redactor Input
 ------------------------------------------------------------------------------------ ##
    Since pretty much every block has a "text" input this gets treated commonly.
 ------------------------------------------------------------------------------------ ##}
{% block block__text__core -%}

    {% set processedText1 = processRichHtml( block.text ??? null ) %}

    {% if processedText1 ??? null %}

        {## Move the block headline to <header> when left/right cols stack on mobile
         ----------------------------------------------------------------------------- ##}
        {% if block.headline ??? processedText1.eyebrow ??? processedText1.headline %}
            {% if not block.settings.leadingTextHeadlinesToMicroHeader|default(false) %}
                {% set class = collect(['LEFT','RIGHT']) | filter( v => v in block.settings.microLayout|default()|upper )
                    ? "!hidden lg:!block"
                    : null %}

                    {% set header %}
                        {{ processedText1.eyebrow | raw }}
                        {{ block('headerHeadline') }}
                        {{ processedText1.headline | raw }}
                    {% endset %}

                    {{ header | retconAttr( '*', { class: class }, false ) }}
            {% endif %}
        {% endif %}

        {{ processedText1.body| raw }}

        {## If the block has a CTA, display it here unless it's been moved to the footer ##}
        {% if not block.settings.textCtaToMicroFooter|default(false) %}
            {{ processedText1.cta | raw }}
        {% endif %}

    {% endif %}
{%- endblock %}



{## Default Block <header> zone content
 ------------------------------------------------------------------------------------ ##
 ------------------------------------------------------------------------------------ ##}
{% block block__header__core %}

    {## Duplicates the block headline into the block <header> for better mobile display.
     -------------------------------------------------------------------------------- ##}
    {% set processedText1 = processRichHtml( block.text ??? null ) %}

    {% if block.headline ??? processedText1.eyebrow ??? processedText1.headline %}

        {% set header %}
            {{ processedText1.eyebrow | raw }}
            {{ block('headerHeadline') }}
            {{ processedText1.headline | raw }}
        {% endset %}

        {% if block.settings.leadingTextHeadlinesToMicroHeader|default(false) %}
            {{ header }}
        {% else %}
            {% if collect(['LEFT','RIGHT']) | filter( v => v in block.settings.microLayout|upper ) %}
                {% set class = "lg:!hidden" %}
                {{ header | retconAttr( '*', { class: class }, false ) }}
            {% endif %}
        {% endif %}

    {% endif %}

{% endblock %}



{## Default Block <footer> zone content
 ------------------------------------------------------------------------------------ ##}
{% block block__footer__core %}

    {% set processedText1 = processRichHtml( block.text ??? null ) %}

    {## Moves Text CTA to block footer
     -------------------------------------------------------------------------------- ##}
    {% if block.settings.textCtaToMicroFooter|default(false) and processedText1.cta ??? null %}
        {{ processedText1.cta | raw }}
    {% endif %}

{% endblock %}