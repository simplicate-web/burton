{## Media Block Base
 ------------------------------------------------------------------------------------ ##
    -> http://localhost:8000/sitehub/blocks/media
 ------------------------------------------------------------------------------------ ##}
{% extends [ "_site/content/blocks/base", "_core/blocks/base" ] %}


{## Render the block using a two-zone micro-layout
 ------------------------------------------------------------------------------------ ##
    -> http://localhost:8000/sitehub/layout/micro
    -> http://buildwithburton.com/docs/micro-layouts
 ------------------------------------------------------------------------------------ ##}
{% block content %}

    {% import "_site/layout/assemble" as layout %}

    {{ layout.micro(
        block.settings.microLayout|default('topBottom'),
        {
            zone1     : block('block__text'),
            zone2     : block('block__media'),
            header    : block('block__header'),
            footer    : block('block__footer'),
            container : block.settings.container|default()
        }
    ) }}

{% endblock %}


{## Default handler for rendering media assets
 ------------------------------------------------------------------------------------ ##
    This block can be overridden in a child template
 ------------------------------------------------------------------------------------ ##}
{% block block__media %}

    {% set sourceItems = 'local' == block.source.value ??? block.source ??? null
        ? block.assets.all() ??? block.assets ??? null : block.embeds.all() ??? block.embeds ??? null %}

    {% set items = [] %}
    {% for item in sourceItems %}

        {## if there's a sourceUrl, we're embedding an external resource, lets use
            oEmbed to get the title, summary, and images from the source.
         ---------------------------------------------------------------------------- ##}
        {% set embedInfo = item.sourceUrl|default() ? embedInfo( item.sourceUrl ) : null %}

        {% set items = items|merge([{
            headline : item.alt           ??? item.title  ??? embedInfo.title  ??? null,
            summary  : item.summary       ??? item.dek    ??? item.text        ??? embedInfo.summary ??? null,
            image    : item.images.all()  ??? item.images ??? embedInfo.images ??? null,
            sourceUrl: item.sourceUrl     ??? null,
            source   : block.source.value ??? null,
            section  : 'media',
            embed    : embedInfo,
            entry    : item,
        }]) %}
    {% endfor %}

    {{ block( 'block__mediaLoop' ) }}
{% endblock %}



{## Render the Media items by passing them to a "loop" template.
 ------------------------------------------------------------------------------------ ##}
{% block block__mediaLoop %}
    {{ include( [
        block.settings.mediaLoop ??? null,
        "_site/loops/loop.auto",
        "_core/blocks/loop.auto"
    ] | filter, {
        items   : items ??? [],
        settings: block.settings ??? {}
    }, withContext = false  ) }}
{% endblock %}