{## Page Head / Meta / Script Base Elements & Defaults
 ------------------------------------------------------------------------------------ ##

    Common elements that appear in and around <head> or right before </body>

------------------------------------------------------------------------------------ ##}
{% block javascript__vite %}
    {% set cssHash = craft.vite.getCssHash("js/app.js") %}
    <!--# if expr="$HTTP_COOKIE=/critical\-css\={{ cssHash }}/" -->
    {{ craft.vite.script("js/app.js", false) }}
    <!--# else -->
    <script>Cookie.set("critical-css", "{{ cssHash }}", { expires: "7D", secure: true });</script>
    {{ craft.vite.includeCriticalCssTags() }}
    {{ craft.vite.script("js/app.js", true) }}
    <!--# endif -->
    {## Favicons, webapp manifests, etc. ##}
    {{ craft.vite.inline( getenv( 'CRAFT_WEB_ROOT' ) ~ "/dist/assets/favicons/webapp.html") }}
{% endblock %}


{% block javascript__waitForGlobal %}
    <script>
        window.checkNested = function(obj, args) {
            for (var i = 0; i < args.length; i++) {
                if (!obj || !obj.hasOwnProperty(args[i])) {
                    return false;
                }
                obj = obj[args[i]];
            }
            return true;
        }

        window.waitForGlobal = function(keyPath, callback) {
            var args = keyPath.split('.');
            if (window.checkNested(window, args)) {
                callback();
            } else {
                setTimeout(function() {
                    window.waitForGlobal(keyPath, callback);
                }, 100);
            }
        }
    </script>
{% endblock %}


{% block javascript__enabledCheck %}
    <script>
        document.documentElement.classList.add('js');
        document.documentElement.classList.remove('no-js');
    </script>
{% endblock %}


{## Global JS variables ##}
{% block javascript__globalVars %}
    <script>
        window.CurrentSite = { baseUrl: '{{ siteUrl }}', id: parseInt('{{ currentSite.id }}')};
    </script>
{% endblock %}



{% block javascript__htmx %}
    <script>
        function waitForHtmx() {
            if( typeof window.htmx !== "undefined" ) {

                if( 'loading' in HTMLImageElement.prototype ) {
                    htmx.on('htmx:afterSwap', function (e) {

                        // Trigger Lazyloading Again.
                        document.querySelectorAll(window.LazyImageSelector).forEach(function (lazyImage) {
                            window.LazyImageObserver.observe(lazyImage);
                        });
                    });
                }

                htmx.on('htmx:beforeSend', function (e) {
                    document.documentElement.classList.add('sprig-beforeSend')
                    document.documentElement.classList.remove('sprig-afterSwap')
                    document.documentElement.classList.remove('sprig-swapError')
                });

                htmx.on('htmx:afterSwap', function (e) {
                    document.documentElement.classList.add('sprig-afterSwap')
                });

                htmx.on('htmx:swapError', function (e) {
                    document.documentElement.classList.add('sprig-swapError')
                    document.documentElement.classList.remove('sprig-beforeSend')
                    document.documentElement.classList.remove('sprig-afterSwap')
                });

            } else {
                setTimeout(waitForHtmx, 250);
            }
        }

        waitForHtmx();
    </script>
{% endblock %}


{% block javascript__tabHandler %}
    {## Handle tabs gracefully as per https://hackernoon.com/removing-that-ugly-focus-ring-and-keeping-it-too-6c8727fefcd2 ##}
    <style>
        html:not(.user-is-tabbing) a:focus,
        html:not(.user-is-tabbing) button:focus,
        html:not(.user-is-tabbing) input:focus,
        html:not(.user-is-tabbing) select:focus,
        html:not(.user-is-tabbing) textarea:focus {
            outline: none;
        }
    </style>
    <script>
        function handleFirstTab(e) {
            if (e.keyCode === 9) {
                document.documentElement.classList.add('user-is-tabbing');
                window.removeEventListener('keydown', handleFirstTab);
                window.addEventListener('mousedown', handleMouseDownOnce);
            }
        }

        function handleMouseDownOnce() {
            document.documentElement.classList.remove('user-is-tabbing');
            window.removeEventListener('mousedown', handleMouseDownOnce);
            window.addEventListener('keydown', handleFirstTab);
        }

        window.addEventListener('keydown', handleFirstTab);
    </script>
{% endblock %}


{% block javascript__darkmode %}
    <script>
        // On page load or when changing themes, best to add inline in `head` to avoid FOUC
        if (
            localStorage.theme === 'dark'
            || (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
            document.documentElement.classList.add('dark')
        } else {
            document.documentElement.classList.remove('dark')
        }

        // Whenever the user explicitly chooses light mode
        localStorage.theme = 'light'

        // Whenever the user explicitly chooses dark mode
        localStorage.theme = 'dark'

        // Whenever the user explicitly chooses to respect the OS preference
        localStorage.removeItem('theme')
    </script>
{% endblock %}


{% block javascript__cookie %}
    <script>
        !function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.Cookie=t()}(this,function(){"use strict";function e(t,n,o){return void 0===n?e.get(t):void(null===n?e.remove(t):e.set(t,n,o))}function t(e){return e.replace(/[.*+?^$|[\](){}\\-]/g,"\\$&")}function n(e){var t="";for(var n in e)if(e.hasOwnProperty(n)){if("expires"===n){var r=e[n];"object"!=typeof r&&(r+="number"==typeof r?"D":"",r=o(r)),e[n]=r.toUTCString()}if("secure"===n){if(!e[n])continue;t+=";"+n}t+=";"+n+"="+e[n]}return e.hasOwnProperty("path")||(t+=";path=/"),t}function o(e){var t=new Date,n=e.charAt(e.length-1),o=parseInt(e,10);switch(n){case"Y":t.setFullYear(t.getFullYear()+o);break;case"M":t.setMonth(t.getMonth()+o);break;case"D":t.setDate(t.getDate()+o);break;case"h":t.setHours(t.getHours()+o);break;case"m":t.setMinutes(t.getMinutes()+o);break;case"s":t.setSeconds(t.getSeconds()+o);break;default:t=new Date(e)}return t}return e.enabled=function(){var t,n="__test_key";return document.cookie=n+"=1",t=!!document.cookie,t&&e.remove(n),t},e.get=function(e,n){if("string"!=typeof e||!e)return null;e="(?:^|; )"+t(e)+"(?:=([^;]*?))?(?:;|$)";var o=new RegExp(e),r=o.exec(document.cookie);return null!==r?n?r[1]:decodeURIComponent(r[1]):null},e.getRaw=function(t){return e.get(t,!0)},e.set=function(e,t,o,r){o!==!0&&(r=o,o=!1),r=n(r?r:{});var u=e+"="+(o?t:encodeURIComponent(t))+r;document.cookie=u},e.setRaw=function(t,n,o){e.set(t,n,!0,o)},e.remove=function(t){e.set(t,"a",{expires:new Date})},e});
    </script>
{% endblock %}


{% block javascript_touchDevice %}
    <script>
        document.documentElement.classList.add(
            ( 'ontouchstart' in window || (window.DocumentTouch && document instanceof DocumentTouch) )
            ? 'has-touchevents'
            : 'no-touchevents'
        )
    </script>
{% endblock %}
