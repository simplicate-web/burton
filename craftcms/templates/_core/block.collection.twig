{## Collection Block Base
{-------------------------------------------------------------------------------------##
    -> http://localhost:8000/sitehub/blocks/collection
{-------------------------------------------------------------------------------------##}
{% extends [ "_site/block", "_core/block" ] %}

{## Collection Block Content ##}
{% block content block('block__assemble') %}

{% block block__assemble %}
    {% set settings    = settings ??? block.settings ??? {}  %}
    {% set microlayout = settings.microlayout ??? 'zone1Top' %}

    {% import "_assemble" as assemble %}
    {{ assemble.microlayout( microlayout, {
        zone1 : block('block__text'),
        zone2 : block('block__collection'),
        header: block('block__header'),
        footer: block('block__footer'),
    }, settings ) }}
{% endblock %}


{## Zone 2 Content ##}
{% block block__collection %}
    {% set settings        = settings ??? block.settings ??? {}  %}
    {% set collectionlayer = settings.collectionlayer ??? 'default' %}

    {% set itemsource  = block.source.value ??? 'items' %}
    {% set collection  = [] %}

    {% if itemsource == 'assets' %}
        {% set collection = block.assets.all() ??? block.assets ??? [] %}
    {% endif %}

    {% if itemsource == 'entries' %}
        {% set collection = block.entries.all() ??? block.entries ??? [] %}
    {% endif %}

    {% if itemsource == 'collect' %}
        {% set params = {
            page  : craft.app.request.getParam('page') ??? craft.app.request.pageNum ??? 1,
            filter: craft.app.request.getParam('f')    ??? block.filter ??? null,
            query : craft.app.request.getParam('q')    ??? block.query  ??? null,
            limit : block.source.settings.limit ??? -1,
            field: 'entries'
        } %}

        {% set collection = CollectionBase( block.collections.ids(), params ) %}
    {% endif %}

    {% if itemsource == 'items' %}
        {% for item in block.items.all() ??? block.items ??? [] %}
            {## TODO: Allow for overwriting a bit with the inline form values? ##}
            {% set collection = collection | merge([item.bit.one() ??? item]) %}
        {% endfor %}
    {% endif %}

    {% import "_assemble" as assemble %}
    {{ assemble.collection( collection, collectionlayer, settings ) }}
{% endblock %}