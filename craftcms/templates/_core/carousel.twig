{% extends template_from_string('{% block carousel %}{% endblock %}') %}

{## Default Carousel Config
    -------------------------------------------------------------------------------- ##
    You may overload the `splide__config` block within the below {% embed %} to
    customize the carousel configuration.

    -> Splide expects a JSON object, so be aware of what you output.
    -------------------------------------------------------------------------------- ##
    Additional {% block %} sections are available for customizing the
    `class` value for various elements within the carousel.
    -------------------------------------------------------------------------------- ##
    If you require additional flexibility:

    - Create a copy of `_core/carousel.twig`
    - Name it `_site/carousel.twig` or `_site/carousel.feature.twig`
    - Update `templatepath` to include your new version (globally or dynamically)
    -------------------------------------------------------------------------------- ##}

        {## Default Carousel Settings (Overloadable)
         ---------------------------------------------------------------------------- ##
        {% block class__base  "min-w-[260px] relative z-40 mb-6 lg:mb-0" %}
        {% block class__track "mx-8" %}
        {% block class__ul    "" %}
        {% block class__slide "flex flex-col items-center justify-start" %}
        {% block class__pagination "" %}

        {% block splide__config %}{
            type: 'loop',
            perPage: 1
        }{% endblock %}
         ---------------------------------------------------------------------------- ##
        ##}

{% set uuid = "splide-#{create('craft\\helpers\\StringHelper').UUID()}" %}

{% block class__base  "min-w-[260px] relative z-40 mb-6 lg:mb-0" %}
{% block class__track "" %}
{% block class__ul    "h-full" %}
{% block class__li    "flex flex-col items-center justify-start" %}
{% block class__slide block('class__li') %}{## class__slide is an alias for class_li ##}
{% block class__pagination "" %}

{% block splide__config %}{
    type: 'loop',
    perPage: 1
}{% endblock %}

{% set items = items ??? [] %}
{% set count = items | length %}
{% set title = title ??? 'Carousel' %}

{## AlpineJS Carousel Component ##}
{% block carousel -%}
{%- if items -%}

    {## Load Splide JS from CDN ##}
    {% html at head %}
        <script src="https://cdn.jsdelivr.net/npm/@splidejs/splide@4.1.4/dist/js/splide.min.js"></script>
    {%- endhtml %}

    {## Load Splide CSS from CDN ##}
    {% css "https://cdn.jsdelivr.net/npm/@splidejs/splide@4.1.4/dist/css/splide.min.css" %}
    {% css %}
        .splide__arrow svg { fill: var(--theme-headline); }
        .splide__arrow--prev { left : -2rem; }
        .splide__arrow--next { right: -2rem; }
        .splide__pagination__page { bottom: -4rem; background-color: var(--theme-accent) !important; }
        .splide__pagination__page.is-active { background-color: var(--theme-headline); }
    {% endcss %}

    <div
        class="w-full relative"
        x-data="{ splide: null }"
        x-cloak
        x-init="$nextTick(() => {
            splide = new Splide( document.querySelector('#{{uuid}}'), {{ block('splide__config') }} )

            splide.on( 'overflow', function() {
                splide.options = {
                    arrows    : ( {{ count }} > splide.options.perPage ),
                    pagination: ( {{ count }} > splide.options.perPage ),
                    drag      : ( {{ count }} > splide.options.perPage )
                }
            } )

            splide.mount()
        })">

        <section
            id="{{uuid}}"
            class="splide {{ block('class__base') }}"
            aria-label="{{title}}"
        >
            <div class="splide__track {{ block('class__track') }}">
                <ul class="splide__list {{ block('class__ul') }}">
                    {% for item in items %}
                        <li class="splide__slide {{ block('class__li') }}">{% block slide item %}</li>
                    {% endfor %}
                </ul>
            </div>

            <footer class="relative">
                <ul class="splide__pagination {{ block('class__pagination') }}"></ul>
            </footer>
        </section>
    </div>
{%- endif -%}{%- endblock %}