{# grids are micro-layouts used for quickly implementing common layout patterns.
   each grid template will include all html/css needed to implement its layout
   responsively, without making edits to the content passed into the grid to
   display within it's cells.

   each grid template has a baseDefaults variable which contains the tailwind
   code necessary to create the layout. individual attributes can be overridden
   by including an attribute of the same name in the block `settings` object that
   is passed into the grid template along with cell content. #}

{% set baseDefaults = {
    classes: {
        gridBase: '',
        gridHeader: '',
        gridCell1: '',
        gridInner1: '',
        gridCell2: '',
        gridInner2: '',
        gridFooter: ''
    }
} %}

{% set props = {
    classes: baseDefaults.classes | merge(props.classes)
} %}

{% set cell1Inner = props.classes.gridInner1 ??? null %}
{% set cell2Inner = props.classes.gridInner2 ??? null %}

{% block gridHeader %}
    {% apply retconRemoveEmpty('div.cGrid__header') %}
        <div class="cGrid__header {{props.classes.gridHeader}}">{% block header %}{{- blockHeader ?? null -}}{% endblock %}</div>
    {% endapply %}
{% endblock %}

{% apply retconRemoveEmpty(['cGrid__cell', 'cGrid__inner']) %}

<div class="cGrid {{props.classes.gridBase}}">
    {% block gridCell1 %}
        <div class="cGrid__cell {{props.classes.gridCell1}}">
            {% if cell1Inner %}<div class="cGrid__inner {{cell1Inner}}">{% endif %}
                {% block cell1 %}{% endblock %}
                {{- blockInclude1 ??? null -}}
            {% if cell1Inner %}</div>{% endif %}
        </div>
    {% endblock %}

    {% block gridCell2 %}
        <div class="cGrid__cell {{props.classes.gridCell2}}">
            {% if cell2Inner %}<div class="cGrid__inner {{cell2Inner}}">{% endif %}
                {% block cell2 %}{% endblock %}
                {{- blockInclude2 ??? null -}}
            {% if cell2Inner %}</div>{% endif %}
        </div>
    {% endblock %}
</div>

{% endapply %}


{% block gridFooter %}
    {% apply retconRemoveEmpty('div.cGrid__footer') %}
        <div class="cGrid__footer {{props.classes.gridFooter}}">{% block footer %}{{- blockFooter ?? null -}}{% endblock %}</div>
    {% endapply %}
{% endblock %}