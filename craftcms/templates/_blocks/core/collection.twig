{## Collection Block Base
 ------------------------------------------------------------------------------------ ##
    -> http://localhost:8000/sitebook/blocks/collection
 ------------------------------------------------------------------------------------ ##}
{% extends "_blocks/core/block" %}


{## Render the block using a two-zone micro-layout
 ------------------------------------------------------------------------------------ ##
    -> http://localhost:8000/sitebook/layout/micro-layouts
    -> http://buildwithburton.com/docs/micro-layouts
 ------------------------------------------------------------------------------------ ##}
{% block content %}

    {% from "_layout/core/micro" import layout as renderMicroLayout %}
    {# renderMicroLayout( layoutName, [ zone1, zone2, header, footer ], { arg1: x, .. } )
     -------------------------------------------------------------------------------- ##}
    {{ renderMicroLayout(
        block.settings.microLayout|default(),

        [ block('content_text'), block('content_collection'),
          block('block_header'), block('block_footer') ],

        { container : block.settings.container|default() }
    ) }}

{% endblock content %}



{## Prepare the Collection Content
 ------------------------------------------------------------------------------------ ##
    These blocks can be overridden in a child template
 ------------------------------------------------------------------------------------ ##}
{% block content_collection %}

    {% set source = block.source|default('items') %}

    {## Rendering in Sprig?
     -------------------------------------------------------------------------------- ##
        If a collection is rendering with a Sprig component, hand-off before collecting
        the items. Sprig templates only accept simple objects as arguments, so item
        collection will happen inside the sprig template.
     -------------------------------------------------------------------------------- ##}
    {% if ( source == 'feed' ) and ( block.pagination.value ??? null in [ 'standard', 'standardWithSearch', 'filterByFeed' ] ) %}

        {{ block('collection_render_sprig') }}


    {## Render in a "loop" template
     -------------------------------------------------------------------------------- ##}
    {% else %}

        {## Collect the items into a list depending on the source type
         ---------------------------------------------------------------------------- ##}
        {% set collection = [] %}
        {% set collection = source == 'assets'  ? block.assets.all()  ??? block.assets  ??? null : collection %}
        {% set collection = source == 'entries' ? block.entries.all() ??? block.entries ??? null : collection %}
        {% set collection = source == 'items'   ? block.items.all()   ??? block.items   ??? null : collection %}

        {## getContentFeedResults() is a custom macro that is a shortcut for
            collecting the items described within a Content Feed entry.
             -> craftcms/modules/gearbox/src/twigextensions/GearboxTwigExtension.php
         ---------------------------------------------------------------------------- ##}
        {% set params = {
            page  : craft.app.request.getParam('page') ??? craft.app.request.pageNum ??? 1,
            filter: craft.app.request.getParam('f')    ??? block.filter ??? block.feeds.one().slug,
            query : craft.app.request.getParam('q')    ??? block.query  ??? null,
            limit : block.limit ??? 6
        } %}

        {% set collection = source == 'feed' ? getContentFeedResults( block.feeds.ids(), params ) : collection %}

        {{ block( 'collection_render_loop' ) }}

    {% endif %}
{% endblock %}



{## Render dynamically using sprig
 ------------------------------------------------------------------------------------ ##}
{% block collection_render_sprig %}
    {{ sprig( '_blocks/loop.searchResults.sprig', {
        settings  : block.settings,
        limit     : block.limit ??? null,
        pagination: block.pagination.value ??? null,
        feedIds   : block.feeds.ids() ?? block.feeds ??? null,
    }) }}
{% endblock %}



{## Render a Collection by passing its items to a "loop" template.
 ------------------------------------------------------------------------------------ ##}
{% block collection_render_loop %}
    {{ include( block.settings.cardLoop ??? block.settings['cardLoop.default'] ??? '_blocks/loop.auto', {
        items: collection|default(),
        settings: block.settings|default()
    }, withContext = false  ) }}
{% endblock %}