{% import "_macros/richtext" as richtext %}
{% import "_macros/widgets" as widgets %}

{# it's important that when this template is included, it
   does not have access to the context of it's parent
   template(s), with the exception of these 3 parameters:

   builder  : the content builder being used
   entry    : the current loaded entry
   thisBlock: a normalizedBlock array. see twig `normalizeBlocks()` function.

   otherwise stuff gets wonky.

    ```
        {{ include('_blocks', {
            entry     : entry,
            builder   : builder,
            thisBlock : thisBlock
        }, withContext = false ) }}
    ```
#}

{# make sure we have the params passed from the calling template (usually: _loop) #}
{% set builder   = builder   ??? 'builder' %}
{% set entry     = entry     ??? null %}
{% set thisBlock = thisBlock ??? null %}

{# try to normalize this block if it doesn't look normal #}
{% if not ( thisBlock.isNormal ??? false ) %}
    {% set thisBlock = normalizeBlocks( [thisBlock], entry, builder )|first %}
{% endif %}

{# get the normalized parts of the block #}
{% set content       = thisBlock.content       ??? null %}
{% set settings      = thisBlock.settings      ??? null %}
{% set blockType     = thisBlock.blockType     ??? ''   %}
{% set sectionHandle = thisBlock.sectionHandle ??? ''   %}
{% set entryHandle   = thisBlock.entryHandle   ??? ''   %}
{% set layout        = settings.layout         ??? ''   %}
{% set variant       = settings.variant        ??? ''   %}

{# don't bother going any further unless we have content #}
{% if thisBlock and content %}

    {# pre-parse the most common fields and setttings across
       all block types to keep twig templates slimmer #}
    {% set headline = headline ??? content.headline       ??? '' %}
    {% set text     = text     ??? content.text           ??? '' %}
    {% set text2    = text2    ??? content.text2          ??? '' %}
    {% set items    = items    ??? content.items.all()    ??? [] %}
    {% set images   = images   ??? content.images.all()   ??? [] %}
    {% set entries  = entries  ??? content.entries.all()  ??? [] %}
    {% set assets   = assets   ??? content.assets.all()   ??? [] %}
    {% set searches = searches ??? content.searches.all() ??? [] %}

    {% set collectionCard = settings.collectionCard      ??? '_components/cards/text' %}
    {% set collectionComp = settings.collectionComponent ??? null %}

    {% set headlineClass  = settings.headlineClass       ??? null %}
    {% set headlineComp   = settings.headlineComponent   ??? null %}

    {# if we're using textConfig.moveHeaders and/or textConfig.moveButtons
       to automatically extract leading headlines (h1/h2/h3/etc) and/or
       trailing button elements from the primary block text field
       so that they can be relocated to a different part of the block grid #}
    {% set moveFirstEyebrow = settings.moveFirstEyebrow ?? false %}
    {% set moveHeaders      = settings.headlineAbove    ?? false %}
    {% set moveButtons      = settings.buttonsBelow     ?? false %}

    {% if moveHeaders or moveButtons %}

        {% set buttonWrap  = settings.buttonWrapper ??? 'div.cButtonGroup.cButtonGroup__trailing' %}

        {# extract / wrap the headers / buttons #}
        {% set headers  %}{{ richtext.leadingHeadlines( text, null, headlineClass, headlineComp ) }}{% endset %}
        {% set buttons  %}{{ richtext.trailingButtons( text, buttonWrap )}}{% endset %}
        {% set text     %}{{ richtext.trimHeadlinesButtons( text, moveHeaders, moveButtons )}}{% endset %}
    {% endif %}

    {# text field formatting #}
    {% set text  %}{{ richtext.prose( text  ) }}{% endset %}
    {% set text2 %}{{ richtext.prose( text2 ) }}{% endset %}

    {# set a blockID for this block that can be used in any dynamic components #}
    {% set blockID = content.id ??? random(111111, 999999) %}

    {# (overridable) default blockHeader for most most blocks #}
    {% set blockHeader -%}
        {%- if text and ( moveFirstEyebrow ) -%}
            {% set eyebrow = text|retconOnly( 'div.eyebrow' ) ??? null %}
            {% set text    = text|retconRemove( 'div.eyebrow' ) %}
            {% set eyebrowText = ( eyebrow ?? '' )|striptags|trim|lower|ascii|kebab  %}
            {% if eyebrowText %}
                {% set eyebrow = eyebrow|retconAttr( 'div', { id: eyebrowText }) %}
            {% endif %}

            {{- eyebrow ??? '' -}}
        {%- endif -%}

        {%- if headline or ( moveHeaders and headers ) -%}
            {%- if headlineClass ??? null -%}<div class="{{headlineClass}}">{%- endif -%}
                {{ headline ? richtext.formatHeadline( headline, 'h1', headlineClass, headlineComp ) : '' }}
                {{ moveHeaders ? headers : null }}
            {%- if headlineClass ??? null -%}</div>{%- endif -%}
        {%- endif -%}
    {%- endset %}

    {# (overridable) default blockHeader for most most blocks #}
    {% set blockFooter -%}
        {%- if ( moveButtons and buttons ) -%}
            {%- if settings.footer ??? null %}<div class="{{settings.footer}}">{% endif -%}
                {{ moveButtons ? buttons : null }}
            {%- if settings.footer ??? null %}</div>{% endif -%}
        {%- endif -%}
    {%- endset %}

    {# (overridable) includes for content area 1 #}
    {% set blockInclude1 -%}
        {{ widgets.embed( thisBlock, 'content1' ) }}
        {%- if settings.include1 ??? null -%}
            {{ include( settings.include1, { settings: settings } ) }}
        {%- endif -%}
    {%- endset %}

    {# (overridable) includes for content area 2 #}
    {% set blockInclude2 -%}
        {{ widgets.embed( thisBlock, 'content2' ) }}
        {%- if settings.include2 ??? null -%}
            {{ include( settings.include2, { settings: settings } ) }}
        {%- endif -%}
    {%- endset %}


    {# include the twig template for this block from a list of
       possible locations based on the blocks attributes.

       the more specific/targetted a variant template is,
       the higher up in the list it should appear

       only the first template found will be included #}
    {% set twigPath = [
        "_sections/#{sectionHandle}/_blocks/#{builder}/#{blockType}.#{entryHandle}.#{variant}",
        "_sections/#{sectionHandle}/_blocks/#{builder}/#{blockType}.#{entryHandle}",
        "_sections/#{sectionHandle}/_blocks/#{builder}/#{blockType}.#{variant}",
        "_sections/#{sectionHandle}/_blocks/#{builder}/#{blockType}",

        "_sections/#{sectionHandle}/_blocks/#{blockType}.#{entryHandle}.#{variant}",
        "_sections/#{sectionHandle}/_blocks/#{blockType}.#{entryHandle}",
        "_sections/#{sectionHandle}/_blocks/#{blockType}.#{variant}",
        "_sections/#{sectionHandle}/_blocks/#{blockType}",

        "_blocks/#{builder}/#{blockType}.#{entryHandle}.#{variant}",
        "_blocks/#{builder}/#{blockType}.#{entryHandle}",
        "_blocks/#{builder}/#{blockType}.#{variant}",
        "_blocks/#{builder}/#{blockType}",

        "_blocks/#{blockType}.#{entryHandle}.#{variant}",
        "_blocks/#{blockType}.#{entryHandle}",
        "_blocks/#{blockType}.#{variant}",
        "_blocks/#{blockType}"
    ] %}

    {{ include( twigPath ) }}
{% endif %}


{#
    below is a list of twig files the above include() would
    try to load for a block with these attributes:

      section   : articles
      entryType : blog
      blockType : imageFeature
      variant   : evenWidth
      builder   : header

    the first template found will be loaded in this order:

      _sections/articles/_blocks/header/imageFeature.blog.evenWidth.twig
      _sections/articles/_blocks/header/imageFeature.blog.twig
      _sections/articles/_blocks/header/imageFeature.evenWidth.twig
      _sections/articles/_blocks/header/imageFeature.twig

      _sections/articles/_blocks/imageFeature.blog.evenWidth.twig
      _sections/articles/_blocks/imageFeature.blog.twig
      _sections/articles/_blocks/imageFeature.evenWidth.twig
      _sections/articles/_blocks/imageFeature.twig


      _blocks/header/imageFeature.blog.evenWidth.twig
      _blocks/header/imageFeature.blog.twig
      _blocks/header/imageFeature.evenWidth.twig
      _blocks/header/imageFeature.twig

      _blocks/imageFeature.blog.evenWidth.twig
      _blocks/imageFeature.blog.twig
      _blocks/imageFeature.evenWidth.twig
      _blocks/imageFeature.twig
#}
