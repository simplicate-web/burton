{# merge default properties with contents of `params` argument (if it exists) #}
{% set props = {
    card: '_components/cards/text',
    topics: []
} %}
{% set props = params is defined and params is iterable ? props|merge(params) : props %}

{# this can be used to force the display of a specific topic in situations where we only want
   to show entries belonging to a topic, but which might belong to multiple topics #}
{% set topic = topic ??? null %}

{# if we have an entry, put it into a card #}
{% set entry = entry ??? null %}
{% if entry %}

    {% embed [props.card] with {
        props: props,
        entry: entry,
        topic: topic ??? entry.topics|first ??? props.topics|first ??? null,
        type: props.card|split('/')|reverse|first
    } only %}

        {% block articleTag %}
            <article class="tease news relative" style="--topicColor:{{topic.color ??? '#000' }};">
        {% endblock %}

        {% block image %}
            {{ include( '_components/media/image', {
                images: images,
                transform: 'aspectVideo',
                class: 'rounded-xl'
            }, withContext = false )}}
        {% endblock %}

        {% block aboveTitle -%}
            {%- if topic.title ??? false -%}
                <strong class="
                    block
                    topic
                    topic__{{topic.slug ??? ''}}
                    text-[color:var(--topicColor)]
                    mb-2
                    ">{{topic.title}}</strong>
            {%- endif -%}
        {% endblock %}

        {% block aboveSummary -%}
            {% if not( type in ['stackedCard', 'largeCard'] ) %}
                <time
                    class="block"
                    datetime="{{ entry.postDate | date('Y-m-d') }}"
                >{{ entry.postDate | date('d M Y') }}</time>
            {% endif %}
        {%- endblock %}        
    {% endembed %}
{% endif %}
