{% extends "sitebook/_core/base" %}

{% import "_layout/core/grids" as grids %}
{% set json = grids.definitions() | json_decode %}

{% block page_main_content %}

    <div data-theme="standard">
        <div class="container @container py-16">
            <h1>Micro Layouts</h1>
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-20 w-full">
                <div class="@container w-full">
                    <p class="html larger"> Mobile ready named layouts for creating some kind of relationship between two or more pieces of content.</p>

                    <p>Used extensively in pretty much all blocks. Available within in any template by using:</p>

                    <strong class="mt-8 block">Usage:</strong>
                    <code class="bg-theme-backgroundOff p-4 block text-xs font-mono leading-6">
                        {% verbatim %}{% import "_layout/core/micro-layouts" as micro %}{% endverbatim %}<br>
                        {% verbatim %}{{ micro.layout( layoutName, [zone1, zone2, header, footer], 'extra-classes' ) }}{% endverbatim %}
                    </code>
                </div>

                <div class="w-full h-full @container bg-theme-backgroundOff" data-theme="dark">
                    <div class="bg-theme-backgroundOff p-3">Micro Layouts are defined as JSON: <strong class="text-theme-accent whitespace-nowrap">_layout/core/micro-layouts.twig</strong></div>
                    <div class="h-full w-full p-5 max-h-[400px] overflow-scroll">
                        {{ dump( json ) }}
                    </div>
                </div>
            </div>
        </div>
    </div>

    {% from "_layout/core/containers" import definitions as containerDefs %}
    {% set containers = ( containerDefs() | json_decode ).options %}

    <div data-theme="dark">
        <div class="container py-16 @container">
            <form class="flex gap-8 gap-x-20" method="post">
                <div>
                    <h2>Settings</h2>

                    <div class="mt-8">
                        <button class="button">Update</button>
                    </div>
                </div>

                <div class="flex flex-col gap-8 pt-4">
                    {% set useContainer = craft.app.request.getParam('container')|default('container') %}
                    <div class="flex gap-4 items-center">
                        <label class="w-36">Container</label>
                        <select name="container">
                            {% for container in containers | keys %}
                                <option {{ useContainer == container ? 'selected' }}>{{ container }}</option>
                            {% endfor %}
                        </select>
                    </div>

                    {% set useZone1 = craft.app.request.getParam('zone1')|default("<div class='like-h2'>Zone 1</div>") %}
                    <div class="flex gap-4 items-center">
                        <label class="w-36">Zone 1</label>
                        <textarea rows="4" class="w-full" name="zone1">{{ useZone1 }}</textarea>
                    </div>

                    {% set useZone2 = craft.app.request.getParam('zone2')|default("<div class='like-h3'>Zone 2</div>") %}
                    <div class="flex gap-4 items-center">
                        <label class="w-36">Zone 2</label>
                        <textarea rows="3" class="w-full" name="zone2">{{ useZone2 }}</textarea>
                    </div>
                </div>

                <div class="flex flex-col gap-8 pt-4">
                    {% set useHighlights = craft.app.request.getParam('highlights')|default('on') %}
                    <div class="flex gap-4 items-center">
                        <label class="w-36">Box Highlights</label>
                        <select name="highlights">
                            <option {{ useHighlights == 'on'  ? 'selected' }} value="on" >On</option>
                            <option {{ useHighlights == 'off' ? 'selected' }} value="off">Off</option>
                        </select>
                    </div>

                    <div class="flex gap-4 items-center">
                        {% set useHeaderFooter = craft.app.request.getParam('headerfooter')|default('show') %}
                        <label class="w-36">Header/Footer</label>
                        <select name="headerfooter">
                            <option {{ useHeaderFooter == 'show' ? 'selected' }} value="show">Show</option>
                            <option {{ useHeaderFooter == 'hide' ? 'selected' }} value="hide">Hide</option>
                        </select>
                    </div>

                    {% set useHeader = craft.app.request.getParam('header')|default("<div class='like-h1'>Header</div>") %}
                    <div class="flex gap-4 items-center">
                        <label class="w-36">Header</label>
                        <textarea rows="2" class="w-full" name="header">{{ useHeader }}</textarea>
                    </div>

                    {% set useFooter = craft.app.request.getParam('footer')|default("<div class='like-h4'>Footer</div>") %}
                    <div class="flex gap-4 items-center">
                        <label class="w-36">Footer</label>
                        <textarea rows="2" class="w-full" name="footer">{{ useFooter }}</textarea>
                    </div>
                </div>
            </form>
        </div>
    </div>

    {% set zone1 %}
        <div data-staging class="min-h-[16rem] w-full h-full {% if useHighlights == 'on' %}bg-red-500/50{% endif %}">
            {{ useZone1 | raw }}
        </div>
    {% endset %}

    {% set zone2 %}
        <div data-staging class="min-h-[16rem] w-full h-full {% if useHighlights == 'on' %}bg-blue-500/50{% endif %}">
            {{ useZone2 | raw }}
        </div>
    {% endset %}

    {% set header %}
        {% if useHeaderFooter == 'show' %}
            <div data-staging class="min-h-[4rem] w-full h-full {% if useHighlights == 'on' %}bg-green-500/50{% endif %}">
                {{ useHeader | raw }}
            </div>
        {% endif %}
    {% endset %}

    {% set footer %}
        {% if useHeaderFooter == 'show' %}
            <div data-staging class="min-h-[4rem] w-full h-full {% if useHighlights == 'on' %}bg-yellow-500/50{% endif %}">
                {{ useFooter | raw }}
            </div>
        {% endif %}
    {% endset %}

    {% import "_layout/core/micro" as micro %}
    {% set json = micro.definitions() | json_decode %}

    {% for layout in json['options'] | keys %}
        <div class="{{ cycle(['bg-white', 'bg-gray-300'], loop.index0) }} py-20">
            <div class="@container mb-20 max-w-3xl mx-auto px-4">
                <h2 class="text-center html">{{ layout }}</h2>
                {% if json['options'][layout]['_']|default() %}
                    <p class="larger text-center html">{{ json['options'][layout]['_'] | trim( '#' ) }}</p>
                {% endif %}
            </div>


            {{ micro.layout( layout, [ zone1, zone2, header | spaceless, footer | spaceless ], { container: useContainer } ) }}
        </div>
    {% endfor %}


{% endblock %}