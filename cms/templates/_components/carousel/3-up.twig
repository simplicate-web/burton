{% set blockID = blockID ??? content.id ??? random(111111, 999999) %}
{% set items   = items   ??? content.items ??? null %}
{% set card    = cardLayout ??? '_components/cards/text' %}

<div
    x-data="{ splide: null }"
    x-init="$nextTick(() => {
        splide = new Splide($refs.splide{{blockID}}, {
            type: 'slide',
            gap: '3rem',
            perPage: 3,
            perMove: 1,
            breakpoints: {
                780: {
                    perPage: 2,
                    gap: '2rem',
                },

                640: {
                    perPage: 1,
                    gap: '1rem',
                }                
            },
            padding: { left: '0rem', right: '0rem' },
            trimSpace: false
        }).mount().go(0).refresh()
    })"
>
    <section x-ref="splide{{blockID}}" class="splide relative z-40 overflow-hidden pt-24 pb-10" aria-label="Carousel {{blockID}}">
        <div class="splide__slider container relative">
            <div class="splide__track !overflow-visible">
                <ul class="splide__list">
                    {% for item in items %}
                        <li class="splide__slide">
                            {{ include(cardLayout, {
                                entry: item,
                                loop: loop
                            }, withContext = false ) }}
                        </li>
                    {% endfor %}
                </ul>
            </div>
        </div>
    </section>
</div>

{% html %}
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@splidejs/splide@4.0.7/dist/css/splide.min.css">
    <script src="https://cdn.jsdelivr.net/npm/@splidejs/splide@4.0.7/dist/js/splide.min.js"></script>

    <style>
        .splide__pagination__page.is-active {
            background: #333;
        }

        .splide__pagination {
            bottom : -2rem;
        }

        .splide__arrow--prev {
            top : -4rem;
            left: 1rem;
            right: auto;
            transform: translate(0);
        }

        .splide__arrow--next {
            top : -4rem;
            left: 4rem;
            right: auto;
            transform: translate(0);
        }

        /* kind of hacky and should be in a pcss file */
        @media (min-width: 640px) {
            .splide__arrow--prev { left: 2rem; }
            .splide__arrow--next { left: 5rem; }
        }

        @media (min-width: 768px) {
            .splide__arrow--prev { left: 1rem; }
            .splide__arrow--next { left: 4rem; }
        }

        @media (min-width: 1024px) {
            .splide__arrow--prev { left: 2rem; }
            .splide__arrow--next { left: 5rem; }
        }

        @media (min-width: 1280px) {
            .splide__arrow--prev { left: 3rem; }
            .splide__arrow--next { left: 6rem; }
        }
    </style>
{% endhtml %}